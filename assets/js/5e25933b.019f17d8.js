"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[4305],{4686:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var t=o(4848),r=o(8453);const i={sidebar_position:7,title:"Logging & Tracing",description:"Overview of logging and tracing in DBOS"},a=void 0,s={id:"python/tutorials/logging-and-tracing",title:"Logging & Tracing",description:"Overview of logging and tracing in DBOS",source:"@site/docs/python/tutorials/logging-and-tracing.md",sourceDirName:"python/tutorials",slug:"/python/tutorials/logging-and-tracing",permalink:"/python/tutorials/logging-and-tracing",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Logging & Tracing",description:"Overview of logging and tracing in DBOS"},sidebar:"tutorialSidebar",previous:{title:"Scheduled Workflows",permalink:"/python/tutorials/scheduled-workflows"},next:{title:"Integrating with Kafka",permalink:"/python/tutorials/kafka-integration"}},l={},c=[{value:"Logging",id:"logging",level:3},{value:"Tracing",id:"tracing",level:3},{value:"OpenTelemetry Export",id:"opentelemetry-export",level:3}];function d(e){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"logging",children:"Logging"}),"\n",(0,t.jsxs)(n.p,{children:["When using DBOS, we recommend you do all logging via Python's ",(0,t.jsx)(n.a,{href:"https://docs.python.org/3/library/logging.html",children:"built-in logger"}),".\nThis allows DBOS Cloud to collect and display your logs."]}),"\n",(0,t.jsxs)(n.p,{children:["For convenience, DBOS provides a pre-configured logger for you to use available at ",(0,t.jsx)(n.a,{href:"/python/reference/contexts#logger",children:(0,t.jsx)(n.code,{children:"DBOS.logger"})}),".\nFor example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'DBOS.logger.info("Welcome to DBOS!")\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You can configure the log level of this built-in logger in your ",(0,t.jsx)(n.a,{href:"/python/reference/configuration",children:(0,t.jsx)(n.code,{children:"dbos-config.yaml"})})," file"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"telemetry:\n  logs:\n    logLevel: 'INFO'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"tracing",children:"Tracing"}),"\n",(0,t.jsxs)(n.p,{children:["DBOS automatically constructs ",(0,t.jsx)(n.a,{href:"https://opentelemetry.io/",children:"OpenTelemetry"})," traces of all workflows and their steps.\nIf you are using FastAPI or Flask, it also automatically traces each HTTP request."]}),"\n",(0,t.jsxs)(n.p,{children:["DBOS constructs hierarchical ",(0,t.jsx)(n.a,{href:"https://opentelemetry.io/docs/concepts/signals/traces/#spans",children:"spans"})," for workflows and each of their steps.\nFor example, if a FastAPI HTTP endpoint calls a workflow that calls a transaction, DBOS constructs a trace encompassing the entire request, with spans for the HTTP endpoint, the workflow, and the transaction.\nThe transaction span is a child of the workflow span, which is a child of the HTTP endpoint span.\nYou can access your current span via ",(0,t.jsx)(n.a,{href:"/python/reference/contexts#span",children:(0,t.jsx)(n.code,{children:"DBOS.span"})})]}),"\n",(0,t.jsx)(n.h3,{id:"opentelemetry-export",children:"OpenTelemetry Export"}),"\n",(0,t.jsxs)(n.p,{children:["You can export DBOS logs and traces to any OpenTelemetry Protocol (OTLP)-compliant receiver.\nIn DBOS Cloud, this is done automatically, and you can view your logs and traces in your ",(0,t.jsx)(n.a,{href:"https://console.dbos.dev",children:"cloud console"})," and ",(0,t.jsx)(n.a,{href:"/cloud-tutorials/monitoring-dashboard",children:"monitoring dashboard"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Locally, you can configure exporters in your ",(0,t.jsx)(n.a,{href:"/python/reference/configuration",children:(0,t.jsx)(n.code,{children:"dbos-config.yaml"})}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"telemetry:\n    OTLPExporter:\n        logsEndpoint: http://localhost:4318/v1/logs\n        tracesEndpoint: http://localhost:4318/v1/traces\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For example, try using ",(0,t.jsx)(n.a,{href:"https://www.jaegertracing.io/docs/latest/getting-started/",children:"Jaeger"})," to visualize the traces of your local application."]})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>s});var t=o(6540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);