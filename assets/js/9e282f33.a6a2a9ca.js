"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[7489],{1049:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"typescript/tutorials/step-tutorial","title":"Steps","description":"Learn how to communicate with external APIs and services","source":"@site/docs/typescript/tutorials/step-tutorial.md","sourceDirName":"typescript/tutorials","slug":"/typescript/tutorials/step-tutorial","permalink":"/typescript/tutorials/step-tutorial","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20,"title":"Steps","description":"Learn how to communicate with external APIs and services"},"sidebar":"tutorialSidebar","previous":{"title":"Workflows","permalink":"/typescript/tutorials/workflow-tutorial"},"next":{"title":"Transactions","permalink":"/typescript/tutorials/transaction-tutorial"}}');var n=r(4848),i=r(8453);const a={sidebar_position:20,title:"Steps",description:"Learn how to communicate with external APIs and services"},o=void 0,c={},l=[{value:"Configurable Retries",id:"configurable-retries",level:3}];function p(e){const t={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["When using DBOS workflows, you should annotate any function that performs complex operations or accesses external APIs or services as a ",(0,n.jsx)(t.em,{children:"step"}),".\nIf a workflow is interrupted, upon restart it automatically resumes execution from the ",(0,n.jsx)(t.strong,{children:"last completed step"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["You can turn ",(0,n.jsx)(t.strong,{children:"any"})," TypeScript function into a step by annotating it with the ",(0,n.jsx)(t.a,{href:"/typescript/reference/transactapi/dbos-class#dbosstep",children:(0,n.jsx)(t.code,{children:"@DBOS.step"})})," decorator.\nThe only requirements are that it must be a static class member function and that its inputs and outputs should be serializable to JSON.\nHere's a simple example:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'class Example {\n  @DBOS.step()\n  static async exampleStep() {\n    return await fetch("https://example.com").then(r => r.text());\n  }\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:["You should make a function a step if you're using it in a DBOS workflow and it performs a ",(0,n.jsx)(t.a,{href:"/typescript/tutorials/workflow-tutorial#determinism",children:(0,n.jsx)(t.strong,{children:"nondeterministic"})})," operation.\nA nondeterministic operation is one that may return different outputs given the same inputs.\nCommon nondeterministic operations include:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Accessing an external API or service, like serving a file from ",(0,n.jsx)(t.a,{href:"https://aws.amazon.com/s3/",children:"AWS S3"}),", calling an external API like ",(0,n.jsx)(t.a,{href:"https://stripe.com/",children:"Stripe"}),", or accessing an external data store like ",(0,n.jsx)(t.a,{href:"https://www.elastic.co/elasticsearch/",children:"Elasticsearch"}),"."]}),"\n",(0,n.jsx)(t.li,{children:"Accessing files on disk."}),"\n",(0,n.jsx)(t.li,{children:"Generating a random number."}),"\n",(0,n.jsx)(t.li,{children:"Getting the current time."}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"configurable-retries",children:"Configurable Retries"}),"\n",(0,n.jsxs)(t.p,{children:["You can optionally configure a step to automatically retry any exception a set number of times with exponential backoff.\nThis is useful for automatically handling transient failures, like making requests to unreliable APIs.\nRetries are configurable through arguments to the ",(0,n.jsx)(t.a,{href:"/typescript/reference/transactapi/dbos-class#dbosstep",children:"step decorator"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:"export interface StepConfig {\n  retriesAllowed?: boolean; // Should failures be retried? (default false)\n  intervalSeconds?: number; // Seconds to wait before the first retry attempt (default 1).\n  maxAttempts?: number;     // Maximum number of retry attempts (default 3). If errors occur more times than this, throw an exception.\n  backoffRate?: number;     // Multiplier by which the retry interval increases after a retry attempt (default 2).\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["For example, let's configure this step to retry exceptions (such as if ",(0,n.jsx)(t.code,{children:"example.com"})," is temporarily down) up to 10 times:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'  @DBOS.step({retriesAllowed=true, maxAttempts: 10})\n  static async exampleStep() {\n    return await fetch("https://example.com").then(r => r.text());\n  }\n'})}),"\n",(0,n.jsxs)(t.p,{children:["If a step exhausts all ",(0,n.jsx)(t.code,{children:"max_attempts"})," retries, it throws an exception (",(0,n.jsx)(t.code,{children:"DBOSMaxStepRetriesError"}),") to the calling workflow.\nIf that exception is not caught, the workflow ",(0,n.jsx)(t.a,{href:"/typescript/tutorials/workflow-tutorial#reliability-guarantees",children:"terminates"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var s=r(6540);const n={},i=s.createContext(n);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);