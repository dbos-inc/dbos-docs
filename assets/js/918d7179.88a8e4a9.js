"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[1],{2391:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"python/integrating-dbos","title":"Add DBOS To Your App","description":"This guide shows you how to add the open-source DBOS Transact library to your existing application to durably execute it and make it resilient to any failure.","source":"@site/docs/python/integrating-dbos.md","sourceDirName":"python","slug":"/python/integrating-dbos","permalink":"/python/integrating-dbos","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20,"title":"Add DBOS To Your App"},"sidebar":"tutorialSidebar","previous":{"title":"Learn DBOS Python","permalink":"/python/programming-guide"},"next":{"title":"AI Model Prompting","permalink":"/python/prompting"}}');var i=e(4848),r=e(8453);const a={sidebar_position:20,title:"Add DBOS To Your App"},s=void 0,l={},d=[{value:"1. Install DBOS",id:"1-install-dbos",level:3},{value:"2. Add the DBOS Initializer",id:"2-add-the-dbos-initializer",level:3},{value:"3. Start Your Application",id:"3-start-your-application",level:3},{value:"4. Start Building With DBOS",id:"4-start-building-with-dbos",level:3}];function c(t){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["This guide shows you how to add the open-source ",(0,i.jsx)(n.a,{href:"https://github.com/dbos-inc/dbos-transact-py",children:"DBOS Transact"})," library to your existing application to ",(0,i.jsx)(n.strong,{children:"durably execute"})," it and make it resilient to any failure."]}),"\n",(0,i.jsx)(n.h3,{id:"1-install-dbos",children:"1. Install DBOS"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"pip install"})," DBOS into your application."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"pip install dbos\n"})}),"\n",(0,i.jsxs)(n.p,{children:["DBOS requires a Postgres database.\nIf you already have Postgres, you can set the ",(0,i.jsx)(n.code,{children:"DBOS_DATABASE_URL"})," environment variable to your connection string (later we'll pass that value into DBOS).\nOtherwise, you can start Postgres in a Docker container with this command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"dbos postgres start\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-add-the-dbos-initializer",children:"2. Add the DBOS Initializer"}),"\n",(0,i.jsx)(n.p,{children:"Add these lines of code to your program's main function.\nThey initialize DBOS when your program starts."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import os\nfrom dbos import DBOS, DBOSConfig\n\nconfig: DBOSConfig = {\n    "name": "my-app",\n    "database_url": os.environ.get("DBOS_DATABASE_URL"),\n}\nDBOS(config=config)\nDBOS.launch()\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-start-your-application",children:"3. Start Your Application"}),"\n",(0,i.jsxs)(n.p,{children:["Try starting your application.\nIf everything is set up correctly, your app should run normally, but log ",(0,i.jsx)(n.code,{children:"Initializing DBOS"})," and ",(0,i.jsx)(n.code,{children:"DBOS launched!"})," on startup.\nCongratulations!  You've integrated DBOS into your application."]}),"\n",(0,i.jsx)(n.h3,{id:"4-start-building-with-dbos",children:"4. Start Building With DBOS"}),"\n",(0,i.jsxs)(n.p,{children:["At this point, you can add any DBOS decorator or method to your application.\nFor example, you can annotate one of your functions as a ",(0,i.jsx)(n.a,{href:"/python/tutorials/workflow-tutorial",children:"workflow"})," and the functions it calls as ",(0,i.jsx)(n.a,{href:"/python/tutorials/step-tutorial",children:"steps"}),".\nDBOS durably executes the workflow so if it is ever interrupted, upon restart it automatically resumes from the last completed step."]}),"\n",(0,i.jsx)(n.p,{children:"You can add DBOS to your application incrementally\u2014it won't interfere with code that's already there.\nIt's totally okay for your application to have one DBOS workflow alongside thousands of lines of non-DBOS code."}),"\n",(0,i.jsxs)(n.p,{children:["To learn more about programming with DBOS, check out ",(0,i.jsx)(n.a,{href:"/python/programming-guide",children:"the guide"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"@DBOS.step()\ndef step_one():\n    ...\n\n@DBOS.step()\ndef step_two():\n    ...\n\n@DBOS.workflow()\ndef workflow():\n    step_one()\n    step_two()\n"})})]})}function p(t={}){const{wrapper:n}={...(0,r.R)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(c,{...t})}):c(t)}},8453:(t,n,e)=>{e.d(n,{R:()=>a,x:()=>s});var o=e(6540);const i={},r=o.createContext(i);function a(t){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function s(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),o.createElement(r.Provider,{value:n},t.children)}}}]);