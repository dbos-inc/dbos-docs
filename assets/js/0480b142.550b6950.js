"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[8070],{7208:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"faq","title":"Troubleshooting & FAQ","description":"Where do I find the DBOS tables?","source":"@site/docs/faq.md","sourceDirName":".","slug":"/faq","permalink":"/faq","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Troubleshooting & FAQ"},"sidebar":"tutorialSidebar","previous":{"title":"DBOS System Tables","permalink":"/explanations/system-tables"}}');var n=o(4848),a=o(8453);const r={title:"Troubleshooting & FAQ"},i=void 0,l={},c=[{value:"Where do I find the DBOS tables?",id:"where-do-i-find-the-dbos-tables",level:3},{value:"Why is my queue stuck?",id:"why-is-my-queue-stuck",level:3},{value:"I&#39;m seeing errors that objects cannot be deserialized?",id:"im-seeing-errors-that-objects-cannot-be-deserialized",level:3},{value:"I&#39;m seeing an error that function X was recorded when Y was expected?",id:"im-seeing-an-error-that-function-x-was-recorded-when-y-was-expected",level:3},{value:"Can I call a workflow from a workflow?",id:"can-i-call-a-workflow-from-a-workflow",level:3},{value:"Can I call a step from a step?",id:"can-i-call-a-step-from-a-step",level:3},{value:"Can I start, monitor, or cancel DBOS workflows from a non-DBOS application?",id:"can-i-start-monitor-or-cancel-dbos-workflows-from-a-non-dbos-application",level:3},{value:"What happens if you start two workflows with the same workflow ID?",id:"what-happens-if-you-start-two-workflows-with-the-same-workflow-id",level:3},{value:"How can I reset all my DBOS state during development?",id:"how-can-i-reset-all-my-dbos-state-during-development",level:3},{value:"How can I cancel a large number of workflows in a batch?",id:"how-can-i-cancel-a-large-number-of-workflows-in-a-batch",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"where-do-i-find-the-dbos-tables",children:"Where do I find the DBOS tables?"}),"\n",(0,n.jsxs)(t.p,{children:["DBOS checkpoints information about your workflows in an isolated ",(0,n.jsx)(t.em,{children:"system database"})," in your Postgres database server.\nBy default, the name of your system database is your application database name suffixed with ",(0,n.jsx)(t.code,{children:"_dbos_sys"}),".\nFor example, if your application database is ",(0,n.jsx)(t.code,{children:"dbos_app_starter"}),", your system database is ",(0,n.jsx)(t.code,{children:"dbos_app_starter_dbos_sys"}),".\nYou can connect to and explore your system database with popular database clients like ",(0,n.jsx)(t.a,{href:"https://www.postgresql.org/docs/current/app-psql.html",children:"psql"})," and ",(0,n.jsx)(t.a,{href:"https://dbeaver.io/",children:"DBeaver"}),".\nNote that the tables are in the ",(0,n.jsx)(t.code,{children:"dbos"})," schema in that database, so the tables are accessible at ",(0,n.jsx)(t.code,{children:"dbos.workflow_status"}),", ",(0,n.jsx)(t.code,{children:"dbos.operation_outputs"}),", etc.\nAll system database tables are documented ",(0,n.jsx)(t.a,{href:"/explanations/system-tables",children:"here"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsxs)(t.p,{children:["If you're using Supabase, the default application database name is ",(0,n.jsx)(t.code,{children:"postgres"}),", so the default system database name is ",(0,n.jsx)(t.code,{children:"postgres_dbos_sys"}),".\nYou cannot connect to or view non-default databases from the Supabase web console, but you can still connect to and explore your system database using a client like ",(0,n.jsx)(t.a,{href:"https://www.postgresql.org/docs/current/app-psql.html",children:"psql"})," or ",(0,n.jsx)(t.a,{href:"https://dbeaver.io/",children:"DBeaver"}),"."]})}),"\n",(0,n.jsx)(t.h3,{id:"why-is-my-queue-stuck",children:"Why is my queue stuck?"}),"\n",(0,n.jsxs)(t.p,{children:["If a DBOS queue is stuck (newly submitted tasks are not being dequeued), it is likely that either the number of queued workflows in a ",(0,n.jsx)(t.code,{children:"PENDING"})," state exceeds the queue's global concurrency limit or the number of queued workflows in a ",(0,n.jsx)(t.code,{children:"PENDING"})," state on each of your processes exceeds the queue's worker concurrency limit.\nIn either case, new tasks cannot be dequeued until some currently executing tasks complete or are cancelled.\nYou can view all tasks executing on a queue from the queues tab of the DBOS Console (",(0,n.jsx)(t.a,{href:"/production/self-hosting/workflow-management",children:"self-hosted"}),", ",(0,n.jsx)(t.a,{href:"/production/dbos-cloud/workflow-management",children:"DBOS Cloud"}),").\nIf you need to, you can cancel tasks to remove them from the queue."]}),"\n",(0,n.jsx)(t.h3,{id:"im-seeing-errors-that-objects-cannot-be-deserialized",children:"I'm seeing errors that objects cannot be deserialized?"}),"\n",(0,n.jsxs)(t.p,{children:["DBOS requires that the inputs and outputs of workflows, as well as the outputs of steps, be ",(0,n.jsx)(t.strong,{children:"serializable"}),".\nThis is because DBOS checkpoints these inputs and outputs to the database to recover workflows from failures.\nDBOS serializes objects to JSON in TypeScript and with pickle in Python.\nSee these guides (",(0,n.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#description",children:"TypeScript"}),", ",(0,n.jsx)(t.a,{href:"https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled",children:"Python"}),") for information on what objects can and cannot be serialized."]}),"\n",(0,n.jsx)(t.p,{children:"If your workflow needs to access an unserializable object like a database connection or API client, do not pass it into the workflow as an argument.\nInstead, either construct the object inside the workflow from parameters passed into the workflow or construct it globally and access it from the workflow or the appropriate steps."}),"\n",(0,n.jsx)(t.h3,{id:"im-seeing-an-error-that-function-x-was-recorded-when-y-was-expected",children:"I'm seeing an error that function X was recorded when Y was expected?"}),"\n",(0,n.jsxs)(t.p,{children:["This error arises when DBOS is recovering a workflow and attempts to execute step Y, but finds a checkpoint in the database for step X instead.\nTypically, this occurs because the workflow function is not ",(0,n.jsx)(t.strong,{children:"deterministic"}),".\nA workflow function is deterministic if, when called multiple times with the same inputs, it invokes the same steps with the same inputs in the same order (given the same return values from those steps).\nIf a workflow is non-deterministic, it may execute different steps during recovery than it did during its original execution."]}),"\n",(0,n.jsxs)(t.p,{children:["To make a workflow deterministic, make sure all non-deterministic operations (such as calling a third-party API, generating a random number, or getting the local time) are performed ",(0,n.jsx)(t.strong,{children:"in steps"})," instead of in the workflow function."]}),"\n",(0,n.jsx)(t.h3,{id:"can-i-call-a-workflow-from-a-workflow",children:"Can I call a workflow from a workflow?"}),"\n",(0,n.jsxs)(t.p,{children:["Yes, you can call (or start, or enqueue) a workflow from inside another workflow.\nThat workflow becomes a ",(0,n.jsx)(t.strong,{children:"child"})," of its caller and is by default assigned a workflow ID derived from its parent's.\nIf you view a workflow's call graph from the DBOS console (",(0,n.jsx)(t.a,{href:"/production/self-hosting/workflow-management",children:"self-hosted"}),", ",(0,n.jsx)(t.a,{href:"/production/dbos-cloud/workflow-management",children:"DBOS Cloud"}),"), it will include the workflow's children."]}),"\n",(0,n.jsx)(t.h3,{id:"can-i-call-a-step-from-a-step",children:"Can I call a step from a step?"}),"\n",(0,n.jsx)(t.p,{children:"Yes, you can call a step from another step.\nHowever, the called step becomes part of the calling step's execution rather than functioning as a separate step."}),"\n",(0,n.jsx)(t.h3,{id:"can-i-start-monitor-or-cancel-dbos-workflows-from-a-non-dbos-application",children:"Can I start, monitor, or cancel DBOS workflows from a non-DBOS application?"}),"\n",(0,n.jsxs)(t.p,{children:["Yes, your non-DBOS application can create a DBOS Client (",(0,n.jsx)(t.a,{href:"/python/reference/client",children:"Python docs"}),", ",(0,n.jsx)(t.a,{href:"/typescript/reference/client",children:"TypeScript docs"}),") and use it to enqueue a workflow in your DBOS application and interact with it or check its status."]}),"\n",(0,n.jsx)(t.h3,{id:"what-happens-if-you-start-two-workflows-with-the-same-workflow-id",children:"What happens if you start two workflows with the same workflow ID?"}),"\n",(0,n.jsx)(t.p,{children:"In DBOS, workflow IDs are unique identifiers of workflow executions.\nIf you enqueue a workflow with the ID of a workflow that already exists, it's a no-op and a handle to the existing workflow execution is returned.\nIf you start a workflow with the ID of a workflow that has already completed, it will return the result of the previous execution.\nIf you start a workflow with the ID of a workflow that is currently executing, it will attempt to recover that workflow's execution, continuing execution from the last completed step.\nIf another process is concurrently executing the same workflow, both processes may execute the step.\nThe first process to complete the step will checkpoint its outcome and continue executing the workflow; the other will see that a checkpoint has already been written and wait for the first process to complete the workflow."}),"\n",(0,n.jsx)(t.h3,{id:"how-can-i-reset-all-my-dbos-state-during-development",children:"How can I reset all my DBOS state during development?"}),"\n",(0,n.jsxs)(t.p,{children:["You can reset your DBOS system database and all internal DBOS state with the ",(0,n.jsx)(t.code,{children:"dbos reset"})," command (",(0,n.jsx)(t.a,{href:"/python/reference/cli#dbos-reset",children:"Python"}),", ",(0,n.jsx)(t.a,{href:"/typescript/reference/tools/cli#npx-dbos-reset",children:"TypeScript"}),")."]}),"\n",(0,n.jsx)(t.h3,{id:"how-can-i-cancel-a-large-number-of-workflows-in-a-batch",children:"How can I cancel a large number of workflows in a batch?"}),"\n",(0,n.jsxs)(t.p,{children:["Write a script using the DBOS Client (",(0,n.jsx)(t.a,{href:"/python/reference/client",children:"Python docs"}),", ",(0,n.jsx)(t.a,{href:"/typescript/reference/client",children:"TypeScript docs"}),") to list all the workflows you need cancelled, then iteratively cancel them."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>i});var s=o(6540);const n={},a=s.createContext(n);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);