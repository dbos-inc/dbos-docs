"use strict";(self.webpackChunkoperon_docs=self.webpackChunkoperon_docs||[]).push([[63],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,y=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8685:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:5,title:"Idempotency",description:"Learn how to make operations idempotent."},i=void 0,l={unversionedId:"tutorials/idempotency-tutorial",id:"tutorials/idempotency-tutorial",title:"Idempotency",description:"Learn how to make operations idempotent.",source:"@site/docs/tutorials/idempotency-tutorial.md",sourceDirName:"tutorials",slug:"/tutorials/idempotency-tutorial",permalink:"/tutorials/idempotency-tutorial",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Idempotency",description:"Learn how to make operations idempotent."},sidebar:"tutorialSidebar",previous:{title:"Workflows",permalink:"/tutorials/workflow-tutorial"},next:{title:"Workflow Communication",permalink:"/tutorials/workflow-communication-tutorial"}},s={},p=[{value:"Setting Idempotency Keys",id:"setting-idempotency-keys",level:3},{value:"Manually Setting Idempotency Keys",id:"manually-setting-idempotency-keys",level:3},{value:"Idempotency Example",id:"idempotency-example",level:3}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this guide, you'll learn how to make operations idempotent."),(0,o.kt)("p",null,"Operon allows users to send any request with an ",(0,o.kt)("em",{parentName:"p"},"idempotency key")," to guarantee it only executes once, even if the request is sent multiple times.\nThis is especially useful if your operations have side effects like making a payment or sending an email."),(0,o.kt)("h3",{id:"setting-idempotency-keys"},"Setting Idempotency Keys"),(0,o.kt)("p",null,"Operon idempotency keys are 128-bit ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Universally_unique_identifier"},"UUIDs"),".\nIdempotency keys are required to be globally unique for your application.\nThere are many popular libraries for generating UUIDs in Typescript, such as ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/uuid"},"uuid.js"),"."),(0,o.kt)("p",null,"To make a request idempotent, generate a UUID and set the request's ",(0,o.kt)("inlineCode",{parentName:"p"},"operon-workflowuuid")," header field to that UUID.\nNo matter how many times you send that request, as long as each request has the idempotency key set, the operation will only execute once."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"It's not a coincidence that both idempotency keys and ",(0,o.kt)("a",{parentName:"p",href:"./workflow-tutorial#workflow-identity"},"workflow identities")," are UUIDs.\nIf you run a workflow with an idempotency key UUID, the identity of that execution is set to that UUID.")),(0,o.kt)("h3",{id:"manually-setting-idempotency-keys"},"Manually Setting Idempotency Keys"),(0,o.kt)("p",null,"Idempotency keys are not automatically used for ",(0,o.kt)("a",{parentName:"p",href:"./http-serving-tutorial#handlers"},"handlers"),".\nInstead, if you invoke an operation from a handler, you can manually pass in an idempotency key as an argument to ",(0,o.kt)("a",{parentName:"p",href:"../api-reference/contexts#handlerctxtinvoketargetclass-workflowuuid"},(0,o.kt)("inlineCode",{parentName:"a"},"context.invoke")),".\nThe syntax for invoking ",(0,o.kt)("inlineCode",{parentName:"p"},"Class.operation")," with an idempotency key is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"  @GetApi(...)\n  static async exampleHandler(ctxt: HandlerContext, ...) {\n    const idempotencyKey = ...;\n    await ctxt.invoke(Class, idempotencyKey).operation(...);\n  }\n")),(0,o.kt)("h3",{id:"idempotency-example"},"Idempotency Example"),(0,o.kt)("p",null,"Let's look at this workflow endpoint from the final step of our ",(0,o.kt)("a",{parentName:"p",href:"../getting-started/quickstart-programming-2"},"quickstart guide"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"  @GetApi('/greeting/:user')\n  @OperonWorkflow()\n  static async helloWorkflow(ctxt: WorkflowContext, user: string) {\n    const greeting = await ctxt.invoke(Hello).helloTransaction(user);\n    try {\n      await ctxt.invoke(Hello).greetPostman(greeting);\n      return greeting;\n    } catch (e) {\n      ctxt.logger.error(e);\n      await ctxt.invoke(Hello).rollbackHelloTransaction(user);\n      return `Greeting failed for ${user}\\n`\n    }\n  }\n")),(0,o.kt)("p",null,"Each request to this endpoint has the side effect of incrementing a database counter.\nHowever, if we set the idempotency key, we can resend a request multiple times without side effects:"),(0,o.kt)("p",null,"If we ",(0,o.kt)("inlineCode",{parentName:"p"},"curl")," this endpoint normally multiple times, each request increments the counter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl http://localhost:3000/greeting/operon\n")),(0,o.kt)("p",null,"However, if we set the idempotency key in the header and resend the request many times, each request returns the same response and the workflow only executes once:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -H "operon-workflowuuid: 123e4567-e89b-12d3-a456-426614174000" http://localhost:3000/greeting/operon\n')))}m.isMDXComponent=!0}}]);