"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[1436],{9562:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"typescript/integrating-dbos","title":"Add DBOS To Your App","description":"This guide shows you how to add the open-source DBOS Transact library to your existing application to durably execute it and make it resilient to any failure.","source":"@site/docs/typescript/integrating-dbos.md","sourceDirName":"typescript","slug":"/typescript/integrating-dbos","permalink":"/typescript/integrating-dbos","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20,"title":"Add DBOS To Your App"},"sidebar":"tutorialSidebar","previous":{"title":"Learn DBOS TypeScript","permalink":"/typescript/programming-guide"},"next":{"title":"Workflows","permalink":"/typescript/tutorials/workflow-tutorial"}}');var o=t(4848),r=t(8453);const s={sidebar_position:20,title:"Add DBOS To Your App"},a=void 0,l={},c=[{value:"Using DBOS Transact",id:"using-dbos-transact",level:3},{value:"1. Install DBOS",id:"1-install-dbos",level:4},{value:"2. Initialize DBOS in Your App",id:"2-initialize-dbos-in-your-app",level:4},{value:"3. Start Your Application",id:"3-start-your-application",level:4},{value:"4. Start Building With DBOS",id:"4-start-building-with-dbos",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["This guide shows you how to add the open-source ",(0,o.jsx)(n.a,{href:"https://github.com/dbos-inc/dbos-transact-ts",children:"DBOS Transact"})," library to your existing application to ",(0,o.jsx)(n.strong,{children:"durably execute"})," it and make it resilient to any failure."]}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.p,{children:"Also check out the integration guides for popular TypeScript frameworks:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/integrations/adding-dbos-to-next",children:"Next.js + DBOS"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/integrations/nestjs",children:"Nest.js + DBOS"})}),"\n"]})]}),"\n",(0,o.jsx)(n.h3,{id:"using-dbos-transact",children:"Using DBOS Transact"}),"\n",(0,o.jsx)(n.h4,{id:"1-install-dbos",children:"1. Install DBOS"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"npm install"})," DBOS into your application. Note that DBOS requires Node.js 20 or later."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"npm install @dbos-inc/dbos-sdk\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Then, create a ",(0,o.jsx)(n.code,{children:"dbos-config.yaml"})," file in your app's root directory:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="dbos-config.yaml"',children:"# yaml-language-server: $schema=https://raw.githubusercontent.com/dbos-inc/dbos-transact-ts/main/dbos-config.schema.json\n\nlanguage: node\ntelemetry:\n  logs:\n    logLevel: 'info'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Also, enable TypeScript decorators in your ",(0,o.jsx)(n.code,{children:"tsconfig.json"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:'title="tsconfig.json"',children:'  "compilerOptions": {\n    "experimentalDecorators": true,\n  }\n'})}),"\n",(0,o.jsx)(n.h4,{id:"2-initialize-dbos-in-your-app",children:"2. Initialize DBOS in Your App"}),"\n",(0,o.jsx)(n.p,{children:"In your app's main entrypoint, add the following code.\nThis initializes DBOS when your app starts."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'import { DBOS } from "@dbos-inc/dbos-sdk";\n\nawait DBOS.launch();\n'})}),"\n",(0,o.jsx)(n.h4,{id:"3-start-your-application",children:"3. Start Your Application"}),"\n",(0,o.jsx)(n.p,{children:"Try starting your application:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"npm start # Or use your own start command\n"})}),"\n",(0,o.jsxs)(n.p,{children:["When ",(0,o.jsx)(n.a,{href:"./reference/transactapi/dbos-class#launching-dbos",children:(0,o.jsx)(n.code,{children:"await DBOS.launch()"})})," is called, it will attempt to connect to a Postgres database.\nIf your project is already using Postgres, add the connection information for your database to ",(0,o.jsx)(n.a,{href:"./reference/configuration#database",children:(0,o.jsx)(n.code,{children:"dbos-config.yaml"})}),".\nOtherwise, DBOS will automatically guide you through launching a new database and connecting to it."]}),"\n",(0,o.jsxs)(n.p,{children:["After you've connected to Postgres, your app should run normally, but log ",(0,o.jsx)(n.code,{children:"DBOS launched"})," on startup.\nCongratulations!  You've integrated DBOS into your application."]}),"\n",(0,o.jsx)(n.h4,{id:"4-start-building-with-dbos",children:"4. Start Building With DBOS"}),"\n",(0,o.jsxs)(n.p,{children:["At this point, you can add any DBOS decorator or method to your application.\nFor example, you can annotate one of your functions as a ",(0,o.jsx)(n.a,{href:"/typescript/tutorials/workflow-tutorial",children:"workflow"})," and the functions it calls as ",(0,o.jsx)(n.a,{href:"/typescript/tutorials/step-tutorial",children:"steps"}),".\nDBOS durably executes the workflow so if it is ever interrupted, upon restart it automatically resumes from the last completed step."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export class Example {\n\n  @DBOS.step()\n  static async myStep(n) {\n    DBOS.logger.info(`Step ${n} completed!`);\n  }\n\n  @DBOS.workflow()\n  static async exampleWorkflow() {\n    await Example.myStep(1);\n    await Example.myStep(2);\n  }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["To ensure that DBOS registers all decorated functions, ",(0,o.jsxs)(n.strong,{children:["declare all DBOS-decorated functions before running ",(0,o.jsx)(n.code,{children:"await DBOS.launch()"}),"."]})]}),"\n",(0,o.jsx)(n.p,{children:"You can add DBOS to your application incrementally\u2014it won't interfere with code that's already there.\nIt's totally okay for your application to have one DBOS workflow alongside thousands of lines of non-DBOS code."}),"\n",(0,o.jsxs)(n.p,{children:["To learn more about programming with DBOS, check out ",(0,o.jsx)(n.a,{href:"/typescript/programming-guide",children:"the programming guide"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);