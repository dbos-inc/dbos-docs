"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[605],{5466:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=t(4848),s=t(8453);const r={sidebar_position:12,title:"Using Knex",description:"Learn how to build applications with Knex and DBOS"},o=void 0,a={id:"typescript/tutorials/using-knex",title:"Using Knex",description:"Learn how to build applications with Knex and DBOS",source:"@site/docs/typescript/tutorials/using-knex.md",sourceDirName:"typescript/tutorials",slug:"/typescript/tutorials/using-knex",permalink:"/typescript/tutorials/using-knex",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12,title:"Using Knex",description:"Learn how to build applications with Knex and DBOS"},sidebar:"tutorialSidebar",previous:{title:"Using Drizzle",permalink:"/typescript/tutorials/using-drizzle"},next:{title:"Using Prisma",permalink:"/typescript/tutorials/using-prisma"}},c={},l=[{value:"Knex Overview",id:"knex-overview",level:2},{value:"Getting Started",id:"getting-started",level:3},{value:"Schema Management",id:"schema-management",level:3},{value:"Using Knex",id:"using-knex",level:3},{value:"Configuring Knex",id:"configuring-knex",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"knex-overview",children:"Knex Overview"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://knexjs.org/",children:"Knex"})," is a popular TypeScript query builder.\nIt allows developers to construct SQL queries in native TypeScript.\nIt also supports querying the database with ",(0,i.jsx)(n.a,{href:"https://knexjs.org/guide/raw.html",children:"raw SQL"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsxs)(n.p,{children:["The default DBOS template application, used in the ",(0,i.jsx)(n.a,{href:"/quickstart",children:"quickstart"})," uses Knex.\nTo download it, run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx -y @dbos-inc/create@latest -t hello -n <app-name>\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then, build it, run schema migrations, and start the sample app:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm run build\nnpx dbos migrate\nnpx dbos start\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To see that it's working, visit this URL in your browser: ",(0,i.jsx)(n.a,{href:"http://localhost:3000/greeting/dbos",children:"http://localhost:3000/greeting/dbos"}),".  You should get this message: ",(0,i.jsx)(n.code,{children:"Hello, dbos! You have been greeted 1 times."})," Each time you refresh the page, the counter should go up by one."]}),"\n",(0,i.jsx)(n.h3,{id:"schema-management",children:"Schema Management"}),"\n",(0,i.jsxs)(n.p,{children:["We strongly recommend you manage your database schema using migrations.\nKnex provides rich native migration support, with documentation ",(0,i.jsx)(n.a,{href:"https://knexjs.org/guide/migrations.html",children:"here"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"You can create a new migration by running:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx knex migrate:make <migration-name>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This will create a new migration file named ",(0,i.jsx)(n.code,{children:"migrations/<timestamp>_<migration-name>.js"}),".\nYou can implement your migration in this file.\nHere is a simple example from the ",(0,i.jsx)(n.a,{href:"/typescript/programming-guide",children:"programming guide"})," of a migration that creates a ",(0,i.jsx)(n.code,{children:"greetings"})," table with ",(0,i.jsx)(n.code,{children:"name"})," and ",(0,i.jsx)(n.code,{children:"note"})," text fields:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"exports.up = function(knex) {\n    return knex.schema.createTable('greetings', table => {\n        table.text('name');\n        table.text('note');\n      });\n};\n\n\nexports.down = function(knex) {\n    return knex.schema.dropTable('greetings');\n};\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"To run your migrations forward, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"npx dbos migrate\n"})}),"\n",(0,i.jsx)(n.h3,{id:"using-knex",children:"Using Knex"}),"\n",(0,i.jsxs)(n.p,{children:["When using DBOS, database operations are performed in ",(0,i.jsx)(n.a,{href:"./transaction-tutorial",children:"transaction functions"}),". Transaction functions must be annotated with the ",(0,i.jsx)(n.a,{href:"../reference/decorators#transaction",children:(0,i.jsx)(n.code,{children:"@Transaction"})})," decorator and must have a ",(0,i.jsx)(n.a,{href:"../reference/contexts#transactioncontextt",children:(0,i.jsx)(n.code,{children:"TransactionContext<Knex>"})})," as their first argument.\nNote that we specify ",(0,i.jsx)(n.code,{children:"Knex"})," in angle brackets."]}),"\n",(0,i.jsxs)(n.p,{children:["Within the transaction function, access your ",(0,i.jsx)(n.a,{href:"https://knexjs.org/guide/query-builder.html",children:"Knex client"})," from the ",(0,i.jsx)(n.code,{children:".client"})," field of your transaction context.\nFor example, this function inserts a new row into the ",(0,i.jsx)(n.code,{children:"greetings"})," table:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"export class Greetings {\n  @Transaction()\n  static async InsertGreeting(ctxt: TransactionContext<Knex>, friend: string, note: string) {\n    await ctxt.client('greetings').insert({\n      name: friend,\n      note: note\n    });\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["DBOS supports the full ",(0,i.jsx)(n.a,{href:"https://knexjs.org/guide/query-builder.html",children:"Knex Postgres API"}),", but doesn't allow manually committing or aborting transactions.\nInstead, transactions automatically commit when the function successfully returns and abort and roll back if the function throws an exception."]}),"\n",(0,i.jsx)(n.h3,{id:"configuring-knex",children:"Configuring Knex"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["If you are using the ",(0,i.jsx)(n.a,{href:"#getting-started",children:"Knex template"}),", this is done for you."]})}),"\n",(0,i.jsxs)(n.p,{children:["To enable Knex, you must set the ",(0,i.jsx)(n.code,{children:"app_db_client"})," field in the ",(0,i.jsx)(n.a,{href:"/typescript/reference/configuration",children:"DBOS configuration file"})," to ",(0,i.jsx)(n.code,{children:"knex"}),".\nYou should also configure Knex migration commands.\nHere is an example of a configuration file set up for Knex:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"language: node\ndatabase:\n  hostname: localhost\n  port: 5432\n  username: postgres\n  password: ${PGPASSWORD}\n  app_db_client: knex\n  migrate:\n    - npx knex migrate:latest\n  rollback:\n    - npx knex migrate:rollback\nruntimeConfig:\n  entrypoints:\n    - dist/operations.js\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Many Knex commands, such as those for ",(0,i.jsx)(n.a,{href:"#schema-management",children:"schema migration"}),", require a ",(0,i.jsx)(n.a,{href:"https://knexjs.org/guide/migrations.html#knexfile-js",children:(0,i.jsx)(n.code,{children:"knexfile.js"})})," configuration file.\nTo avoid managing your configuration in two places, we recommend ",(0,i.jsx)(n.code,{children:"knexfile.js"})," load configuration information from your ",(0,i.jsx)(n.a,{href:"/typescript/reference/configuration",children:"DBOS configuration file"}),".\nHere is an example of a ",(0,i.jsx)(n.code,{children:"knexfile.js"})," that does this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const { parseConfigFile } = require('@dbos-inc/dbos-sdk');\n\nconst [dbosConfig, ] = parseConfigFile();\n\nconst config = {\n  client: 'pg',\n  connection: {\n    host: dbosConfig.poolConfig.host,\n    port: dbosConfig.poolConfig.port,\n    user: dbosConfig.poolConfig.user,\n    password: dbosConfig.poolConfig.password,\n    database: dbosConfig.poolConfig.database,\n    ssl: dbosConfig.poolConfig.ssl,\n  },\n  migrations: {\n    directory: './migrations'\n  }\n};\n\nmodule.exports = config;\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);