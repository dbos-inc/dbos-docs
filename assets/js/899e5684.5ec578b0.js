"use strict";(self.webpackChunkoperon_docs=self.webpackChunkoperon_docs||[]).push([[602],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1596:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:1,title:"Operon Contexts"},i=void 0,s={unversionedId:"api-reference/contexts",id:"api-reference/contexts",title:"Operon Contexts",description:"Each instance of Operon workflows, transactions, communicators and HTTP handlers have an associated context. Transactions,",source:"@site/docs/api-reference/contexts.md",sourceDirName:"api-reference",slug:"/api-reference/contexts",permalink:"/operon-docs/api-reference/contexts",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Operon Contexts"},sidebar:"tutorialSidebar",previous:{title:"API Reference",permalink:"/operon-docs/category/api-reference"},next:{title:"Decorator Reference",permalink:"/operon-docs/api-reference/decorators"}},c={},l=[{value:"<code>OperonContext</code>",id:"operoncontext",level:2},{value:"<code>WorkflowContext</code>",id:"workflowcontext",level:2},{value:"<code>TransactionContext</code>",id:"transactioncontext",level:2},{value:"<code>CommunicatorContext</code>",id:"communicatorcontext",level:2},{value:"<code>HandlerContext</code>",id:"handlercontext",level:2}],p={toc:l},d="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Each instance of Operon workflows, transactions, communicators and HTTP handlers have an associated context. Transactions,"),(0,o.kt)("h2",{id:"operoncontext"},(0,o.kt)("inlineCode",{parentName:"h2"},"OperonContext")),(0,o.kt)("p",null,"The base context for each operation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"interface OperonContext {\n  request?: IncomingMessage; // Nodejs IncomingMessage\n  workflowUUID: string; // Unique identifier for the workflow. Empty string for Handler instances.\n  authenticatedUser: string; // Identity of the caller, if provided.\n\n  span: Span; // An OpenTelemetry Trace object.\n\n  getConfig(key: string): any;\n\n  info(message: string): void;\n  warn(message: string): void;\n  log(message: string): void;\n  error(message: string): void;\n  debug(message: string): void;\n}\n")),(0,o.kt)("h2",{id:"workflowcontext"},(0,o.kt)("inlineCode",{parentName:"h2"},"WorkflowContext")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"interface WorkflowContext extends OperonContext {\n  invoke<T extends object>(object: T): WFInvokeFuncs<T>;\n  send<T extends NonNullable<any>>(destinationUUID: string, message: T, topic?: string | null): Promise<void>;\n  recv<T extends NonNullable<any>>(topic?: string | null, timeoutSeconds?: number): Promise<T | null>\n  setEvent<T extends NonNullable<any>>(key: string, value: T): Promise<void>;\n  transaction<T extends any[], R>(txn: OperonTransaction<T, R>, ...args: T): Promise<R>; // TODO: Make private\n  external<T extends any[], R>(commFn: OperonCommunicator<T, R>, ...args: T): Promise<R>; // TODO: Make private\n}\n")),(0,o.kt)("h2",{id:"transactioncontext"},(0,o.kt)("inlineCode",{parentName:"h2"},"TransactionContext")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"interface TransactionContext extends OperonContext {\n  pgClient: PoolClient;\n  prismaClient: PrismaClient;\n  typeormEM: TypeORMEntityManager;\n}\n")),(0,o.kt)("h2",{id:"communicatorcontext"},(0,o.kt)("inlineCode",{parentName:"h2"},"CommunicatorContext")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"interface CommunicatorContext extends OperonContext {\n}\n")),(0,o.kt)("h2",{id:"handlercontext"},(0,o.kt)("inlineCode",{parentName:"h2"},"HandlerContext")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"interface HandlerContext extends OperonContext {\n  koaContext: Koa.Context;\n  send<T extends NonNullable<any>>(destinationUUID: string, message: T, topic: string): Promise<void>;\n  getEvent<T extends NonNullable<any>>(workflowUUID: string, key: string, timeoutSeconds?: number): Promise<T | null>;\n  retrieveWorkflow<R>(workflowUUID: string): WorkflowHandle<R>;\n  invoke<T extends object>(object: T, workflowUUID?: string): HandlerTxFuncs<T> & HandlerWfFuncs<T>;\n  workflow<T extends any[], R>(wf: OperonWorkflow<T, R>, params: WorkflowParams, ...args: T): Promise<WorkflowHandle<R>>; // TODO: Make private\n  transaction<T extends any[], R>(txn: OperonTransaction<T, R>, params: WorkflowParams, ...args: T): Promise<R>; // TODO: Make private\n\n}\n")))}u.isMDXComponent=!0}}]);