"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[4790],{4985:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var n=a(5893),r=a(1151),o=a(4866),i=a(5162);const s={sidebar_position:4,title:"Interactive Time Travel",description:"Learn how to run interactive time-travelled queries on your database"},l=void 0,u={id:"cloud-tutorials/interactive-timetravel",title:"Interactive Time Travel",description:"Learn how to run interactive time-travelled queries on your database",source:"@site/docs/cloud-tutorials/interactive-timetravel.md",sourceDirName:"cloud-tutorials",slug:"/cloud-tutorials/interactive-timetravel",permalink:"/cloud-tutorials/interactive-timetravel",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Interactive Time Travel",description:"Learn how to run interactive time-travelled queries on your database"},sidebar:"tutorialSidebar",previous:{title:"Time Travel Debugging",permalink:"/cloud-tutorials/timetravel-debugging"},next:{title:"Monitoring Dashboard",permalink:"/cloud-tutorials/monitoring-dashboard"}},c={},d=[{value:"Preliminaries",id:"preliminaries",level:3},{value:"Running Time-Travelled Queries",id:"running-time-travelled-queries",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h3:"h3",img:"img",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["In this guide, you'll learn how to interactively time travel with DBOS Cloud: how to query your application's database as of any past point in time within the time travel ",(0,n.jsx)(t.a,{href:"https://www.dbos.dev/pricing",children:"data retention period"})," of your current plan."]}),"\n",(0,n.jsx)(t.h3,{id:"preliminaries",children:"Preliminaries"}),"\n",(0,n.jsxs)(t.p,{children:["Before following the steps in this guide, make sure you've ",(0,n.jsx)(t.a,{href:"application-management",children:"deployed an application to DBOS Cloud"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["In order to time travel, you need to locally install our time travel proxy.\nPlease follow our ",(0,n.jsx)(t.a,{href:"./timetravel-debugging",children:"time travel debugging tutorial"})," to install the proxy via VSCode or manually.\nThen, start your proxy and connect it to your application database instance:"]}),"\n",(0,n.jsxs)(o.Z,{groupId:"environment",children:[(0,n.jsxs)(i.Z,{value:"VSCode",label:"VSCode",children:[(0,n.jsxs)(t.p,{children:["Open VSCode to your application folder. In the DBOS Cloud View, hover over the application you want to debug and select the ",(0,n.jsx)(t.code,{children:"Launch Debug Proxy"})," menu item.\nThis automatically launches the time travel proxy and connects it to your application database instance."]}),(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"DBOS Time Travel Launch Debug Proxy Screenshot",src:a(3487).Z+"",width:"985",height:"303"})}),(0,n.jsxs)(t.p,{children:["For more information, please see the ",(0,n.jsx)(t.a,{href:"/api-reference/time-travel-debugger",children:"Time Travel Debugger reference"})]})]}),(0,n.jsxs)(i.Z,{value:"CLI",label:"CLI",children:[(0,n.jsxs)(t.p,{children:["Open a terminal window and navigate to the folder where you downloaded the pre-compiled debug proxy binary file (",(0,n.jsx)(t.code,{children:"debug-proxy"}),")."]}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"cd <Your Download Folder>/\nchmod +x debug-proxy\n./debug-proxy -db <app database name>_dbos_prov -host <app cloud database hostname>  -password <database password> -user <database username>\n"})})]})]}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:"The DBOS time travel proxy securely connects to the provenance database, an append-only replica of your application database maintained by DBOS Cloud.\nIt uses the historical information in this database to run time-travelled queries without modifying your application database."})}),"\n",(0,n.jsx)(t.h3,{id:"running-time-travelled-queries",children:"Running Time-Travelled Queries"}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we interactively run time-travelled queries on your application database using ",(0,n.jsx)(t.a,{href:"https://www.postgresql.org/docs/current/app-psql.html",children:(0,n.jsx)(t.code,{children:"psql"})}),".\nFirst, connect ",(0,n.jsx)(t.code,{children:"psql"})," to your local time travel proxy:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"psql -h localhost -p 2345 -U postgres\n"})}),"\n",(0,n.jsxs)(t.p,{children:["By default, any queries you run will reflect the current state of your database.\nLet's assume you've deployed the ",(0,n.jsx)(t.a,{href:"../getting-started/quickstart",children:'"Hello, Database" quickstart'})," application to DBOS Cloud.\nThe application's ",(0,n.jsx)(t.code,{children:"dbos_hello"})," table tracks how many times each person has been greeted.\nThe following query tells you how many times Mike has been greeted:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"postgres=> select greet_count from dbos_hello where name = 'Mike';\n greet_count\n-------------\n           8\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Now, let's time travel!\nTo view your database at a past point in time, you can set the timestamp through the special ",(0,n.jsx)(t.code,{children:"DBOS TS <timestamp>;"})," command.\nWe support any timestamp string in ",(0,n.jsx)(t.a,{href:"https://datatracker.ietf.org/doc/html/rfc3339",children:"RFC 3339 format"}),".\nFor example, to view your database at 4:00:00 PM PDT (UTC-07:00) on 2024-04-26, and see how many times Mike had been greeted as of then, run:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"postgres=> DBOS TS '2024-04-26T16:00:00-07:00';\npostgres=> select greet_count from dbos_hello where name = 'Mike';\n greet_count\n-------------\n           4\n"})}),"\n",(0,n.jsxs)(t.p,{children:["You can run any ",(0,n.jsx)(t.code,{children:"SELECT"})," statement on the database to query its state as of the timestamp you chose.\nStatements that modify schemas or data (",(0,n.jsx)(t.code,{children:"INSERT"}),", ",(0,n.jsx)(t.code,{children:"UPDATE"}),", ",(0,n.jsx)(t.code,{children:"DROP TABLE"}),", etc.) will not have any effect.\nAt any time, you can run ",(0,n.jsx)(t.code,{children:"DBOS TS <timestamp>;"})," again to travel to a different time.\nYou can also run ",(0,n.jsx)(t.code,{children:"DBOS SNAPSHOT RESET;"})," to return to the present time."]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},5162:(e,t,a)=>{a.d(t,{Z:()=>i});a(7294);var n=a(6905);const r={tabItem:"tabItem_Ymn6"};var o=a(5893);function i(e){let{children:t,hidden:a,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,n.Z)(r.tabItem,i),hidden:a,children:t})}},4866:(e,t,a)=>{a.d(t,{Z:()=>j});var n=a(7294),r=a(6905),o=a(2466),i=a(6550),s=a(469),l=a(1980),u=a(7392),c=a(12);function d(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l._X)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function b(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=h(e),[i,l]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[u,d]=m({queryString:a,groupId:r}),[b,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,c.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),v=(()=>{const e=u??b;return p({value:e,tabValues:o})?e:null})();(0,s.Z)((()=>{v&&l(v)}),[v]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),f(e)}),[d,f,o]),tabValues:o}}var f=a(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=a(5893);function y(e){let{className:t,block:a,selectedValue:n,selectValue:i,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),c=e=>{const t=e.currentTarget,a=l.indexOf(t),r=s[a].value;r!==n&&(u(t),i(r))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;t=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;t=l[a]??l[l.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t),children:s.map((e=>{let{value:t,label:a,attributes:o}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>l.push(e),onKeyDown:d,onClick:c,...o,className:(0,r.Z)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":n===t}),children:a??t},t)}))})}function x(e){let{lazy:t,children:a,selectedValue:r}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function w(e){const t=b(e);return(0,g.jsxs)("div",{className:(0,r.Z)("tabs-container",v.tabList),children:[(0,g.jsx)(y,{...e,...t}),(0,g.jsx)(x,{...e,...t})]})}function j(e){const t=(0,f.Z)();return(0,g.jsx)(w,{...e,children:d(e.children)},String(t))}},3487:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ttdbg-launch-proxy-00def03932a5336996d5a08b8057be42.png"},1151:(e,t,a)=>{a.d(t,{Z:()=>s,a:()=>i});var n=a(7294);const r={},o=n.createContext(r);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);