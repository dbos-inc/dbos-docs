"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[4305],{1328:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"python/tutorials/logging-and-tracing","title":"Logging & Tracing","description":"Logging","source":"@site/docs/python/tutorials/logging-and-tracing.md","sourceDirName":"python/tutorials","slug":"/python/tutorials/logging-and-tracing","permalink":"/python/tutorials/logging-and-tracing","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"Logging & Tracing"},"sidebar":"tutorialSidebar","previous":{"title":"Scheduled Workflows","permalink":"/python/tutorials/scheduled-workflows"},"next":{"title":"Integrating with Kafka","permalink":"/python/tutorials/kafka-integration"}}');var r=t(4848),a=t(8453);const s={sidebar_position:7,title:"Logging & Tracing"},i=void 0,c={},l=[{value:"Logging",id:"logging",level:3},{value:"Tracing",id:"tracing",level:3},{value:"OpenTelemetry Export",id:"opentelemetry-export",level:3}];function p(e){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"logging",children:"Logging"}),"\n",(0,r.jsxs)(n.p,{children:["For convenience, DBOS provides a pre-configured logger for you to use available at ",(0,r.jsx)(n.a,{href:"/python/reference/contexts#logger",children:(0,r.jsx)(n.code,{children:"DBOS.logger"})}),".\nFor example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'DBOS.logger.info("Welcome to DBOS!")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You can ",(0,r.jsx)(n.a,{href:"/python/reference/configuration",children:"configure"})," the log level of this built-in logger through the DBOS constructor.\nThis also configures the log level of the DBOS library."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'config: DBOSConfig = {\n  "name": "my-app"\n  "log_level": "INFO"\n}\nDBOS(config=config)\n'})}),"\n",(0,r.jsx)(n.h3,{id:"tracing",children:"Tracing"}),"\n",(0,r.jsxs)(n.p,{children:["DBOS automatically constructs ",(0,r.jsx)(n.a,{href:"https://opentelemetry.io/",children:"OpenTelemetry"})," traces of all workflows and their steps.\nIf you are using FastAPI or Flask, it also automatically traces each HTTP request."]}),"\n",(0,r.jsxs)(n.p,{children:["DBOS constructs hierarchical ",(0,r.jsx)(n.a,{href:"https://opentelemetry.io/docs/concepts/signals/traces/#spans",children:"spans"})," for workflows and each of their steps.\nFor example, if a FastAPI HTTP endpoint calls a workflow that calls a transaction, DBOS constructs a trace encompassing the entire request, with spans for the HTTP endpoint, the workflow, and the transaction.\nThe transaction span is a child of the workflow span, which is a child of the HTTP endpoint span.\nYou can access your current span via ",(0,r.jsx)(n.a,{href:"/python/reference/contexts#span",children:(0,r.jsx)(n.code,{children:"DBOS.span"})}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"opentelemetry-export",children:"OpenTelemetry Export"}),"\n",(0,r.jsx)(n.p,{children:"You can export DBOS traces to any OpenTelemetry Protocol (OTLP)-compliant receiver."}),"\n",(0,r.jsxs)(n.p,{children:["You can ",(0,r.jsx)(n.a,{href:"/python/reference/configuration",children:"configure"})," exporters through the DBOS constructor.\nFor example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'config: DBOSConfig = {\n  "name": "my-app"\n  "otlp_traces_endpoints": ["http://localhost:4318/v1/traces"]\n}\nDBOS(config=config)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["For example, try using ",(0,r.jsx)(n.a,{href:"https://www.jaegertracing.io/docs/latest/getting-started/",children:"Jaeger"})," to visualize the traces of your local application."]})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var o=t(6540);const r={},a=o.createContext(r);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);