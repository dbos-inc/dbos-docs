"use strict";(self.webpackChunkoperon_docs=self.webpackChunkoperon_docs||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome to Operon!","href":"/operon-docs/","docId":"index"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Operon Quickstart","href":"/operon-docs/getting-started/quickstart","docId":"getting-started/quickstart"},{"type":"link","label":"Programming Quickstart: Part 1","href":"/operon-docs/getting-started/quickstart-programming-1","docId":"getting-started/quickstart-programming-1"},{"type":"link","label":"Programming Quickstart: Part 2","href":"/operon-docs/getting-started/quickstart-programming-2","docId":"getting-started/quickstart-programming-2"},{"type":"link","label":"Core Concepts","href":"/operon-docs/getting-started/coreconcepts","docId":"getting-started/coreconcepts"}],"href":"/operon-docs/category/getting-started"},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Operon Project Structure","href":"/operon-docs/tutorials/project-structure-tutorial","docId":"tutorials/project-structure-tutorial"},{"type":"link","label":"HTTP handlers","href":"/operon-docs/tutorials/handlers-tutorial","docId":"tutorials/handlers-tutorial"},{"type":"link","label":"Transactions","href":"/operon-docs/tutorials/transaction-tutorial","docId":"tutorials/transaction-tutorial"},{"type":"link","label":"Workflows","href":"/operon-docs/tutorials/workflow-tutorial","docId":"tutorials/workflow-tutorial"},{"type":"link","label":"Asynchronous workflows","href":"/operon-docs/tutorials/async-workflow-tutorial","docId":"tutorials/async-workflow-tutorial"},{"type":"link","label":"Workflows communication","href":"/operon-docs/tutorials/workflow-comm-tutorial","docId":"tutorials/workflow-comm-tutorial"},{"type":"link","label":"Third party calls","href":"/operon-docs/tutorials/third-party-tutorial","docId":"tutorials/third-party-tutorial"},{"type":"link","label":"Workflow events","href":"/operon-docs/tutorials/client-workflow-interactions-tutorial","docId":"tutorials/client-workflow-interactions-tutorial"}],"href":"/operon-docs/category/tutorials"},{"type":"category","label":"API Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Operon Contexts","href":"/operon-docs/api-reference/contexts","docId":"api-reference/contexts"},{"type":"link","label":"Decorator Reference","href":"/operon-docs/api-reference/decorators","docId":"api-reference/decorators"},{"type":"link","label":"Workflow handles","href":"/operon-docs/api-reference/workflow-handles","docId":"api-reference/workflow-handles"}],"href":"/operon-docs/category/api-reference"}]},"docs":{"api-reference/contexts":{"id":"api-reference/contexts","title":"Operon Contexts","description":"Each instance of Operon workflows, transactions, communicators and HTTP handlers have an associated context. Transactions,","sidebar":"tutorialSidebar"},"api-reference/decorators":{"id":"api-reference/decorators","title":"Decorator Reference","description":"Usage of decorators in Operon, with exhaustive list","sidebar":"tutorialSidebar"},"api-reference/workflow-handles":{"id":"api-reference/workflow-handles","title":"Workflow handles","description":"API documentation for Operon Workflow Handles","sidebar":"tutorialSidebar"},"getting-started/coreconcepts":{"id":"getting-started/coreconcepts","title":"Core Concepts","description":"Operon is a simple easy to use serverless framework for developing transactional application.","sidebar":"tutorialSidebar"},"getting-started/quickstart":{"id":"getting-started/quickstart","title":"Operon Quickstart","description":"Here\'s how to get an Operon application up and running in less than five minutes!","sidebar":"tutorialSidebar"},"getting-started/quickstart-programming-1":{"id":"getting-started/quickstart-programming-1","title":"Programming Quickstart: Part 1","description":"Now that we have an application up and running, let\'s learn how to program in Operon!","sidebar":"tutorialSidebar"},"getting-started/quickstart-programming-2":{"id":"getting-started/quickstart-programming-2","title":"Programming Quickstart: Part 2","description":"Now that we\'ve written our first few functions, let\'s learn how to stitch them into powerful and reliable programs.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Welcome to Operon!","description":"Let\'s discover Operon.","sidebar":"tutorialSidebar"},"tutorials/async-workflow-tutorial":{"id":"tutorials/async-workflow-tutorial","title":"Asynchronous workflows","description":"Wait for a workflow to complete","sidebar":"tutorialSidebar"},"tutorials/client-workflow-interactions-tutorial":{"id":"tutorials/client-workflow-interactions-tutorial","title":"Workflow events","description":"Learn how to send events from workflows and receive them from handlers","sidebar":"tutorialSidebar"},"tutorials/handlers-tutorial":{"id":"tutorials/handlers-tutorial","title":"HTTP handlers","description":"Learn how to register Operon HTTP handlers","sidebar":"tutorialSidebar"},"tutorials/project-structure-tutorial":{"id":"tutorials/project-structure-tutorial","title":"Operon Project Structure","description":"Learn how to structure an Operon application","sidebar":"tutorialSidebar"},"tutorials/third-party-tutorial":{"id":"tutorials/third-party-tutorial","title":"Third party calls","description":"Send requests to a third party API from a workflow","sidebar":"tutorialSidebar"},"tutorials/transaction-tutorial":{"id":"tutorials/transaction-tutorial","title":"Transactions","description":"Write transactional code","sidebar":"tutorialSidebar"},"tutorials/workflow-comm-tutorial":{"id":"tutorials/workflow-comm-tutorial","title":"Workflows communication","description":"Two workflows play ping pong","sidebar":"tutorialSidebar"},"tutorials/workflow-tutorial":{"id":"tutorials/workflow-tutorial","title":"Workflows","description":"Compose transactions within a workflow","sidebar":"tutorialSidebar"}}}')}}]);