"use strict";(self.webpackChunkoperon_docs=self.webpackChunkoperon_docs||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/operon-docs/","docId":"index"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Operon Quickstart","href":"/operon-docs/getting-started/quickstart","docId":"getting-started/quickstart"},{"type":"link","label":"Programming Quickstart - Part 1","href":"/operon-docs/getting-started/quickstart-programming-1","docId":"getting-started/quickstart-programming-1"},{"type":"link","label":"Programming Quickstart - Part 2","href":"/operon-docs/getting-started/quickstart-programming-2","docId":"getting-started/quickstart-programming-2"}],"href":"/operon-docs/category/getting-started"},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Authentication and Authorization","href":"/operon-docs/tutorials/authentication-authorization","docId":"tutorials/authentication-authorization"},{"type":"link","label":"HTTP Serving","href":"/operon-docs/tutorials/http-serving-tutorial","docId":"tutorials/http-serving-tutorial"},{"type":"link","label":"Transactions","href":"/operon-docs/tutorials/transaction-tutorial","docId":"tutorials/transaction-tutorial"},{"type":"link","label":"Communicators","href":"/operon-docs/tutorials/communicator-tutorial","docId":"tutorials/communicator-tutorial"},{"type":"link","label":"Workflows","href":"/operon-docs/tutorials/workflow-tutorial","docId":"tutorials/workflow-tutorial"},{"type":"link","label":"Idempotency","href":"/operon-docs/tutorials/idempotency-tutorial","docId":"tutorials/idempotency-tutorial"},{"type":"link","label":"Workflow Communication","href":"/operon-docs/tutorials/workflow-communication-tutorial","docId":"tutorials/workflow-communication-tutorial"},{"type":"link","label":"Using TypeORM","href":"/operon-docs/tutorials/using-typeorm","docId":"tutorials/using-typeorm"},{"type":"link","label":"Logging and Tracing","href":"/operon-docs/tutorials/logging","docId":"tutorials/logging"},{"type":"link","label":"Testing and Debugging","href":"/operon-docs/tutorials/testing-tutorial","docId":"tutorials/testing-tutorial"},{"type":"link","label":"Using Prisma","href":"/operon-docs/tutorials/using-prisma","docId":"tutorials/using-prisma"},{"type":"link","label":"Communication Example","href":"/operon-docs/tutorials/ping-pong-tutorial","docId":"tutorials/ping-pong-tutorial"}],"href":"/operon-docs/category/tutorials"},{"type":"category","label":"API Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Operon Configuration","href":"/operon-docs/api-reference/configuration","docId":"api-reference/configuration"},{"type":"link","label":"Operon CLI","href":"/operon-docs/api-reference/cli","docId":"api-reference/cli"},{"type":"link","label":"Decorator Reference","href":"/operon-docs/api-reference/decorators","docId":"api-reference/decorators"},{"type":"link","label":"Operon Contexts Reference","href":"/operon-docs/api-reference/contexts","docId":"api-reference/contexts"},{"type":"link","label":"Workflow Handles","href":"/operon-docs/api-reference/workflow-handles","docId":"api-reference/workflow-handles"},{"type":"link","label":"Operon Testing Runtime","href":"/operon-docs/api-reference/testing-runtime","docId":"api-reference/testing-runtime"}],"href":"/operon-docs/category/api-reference"},{"type":"category","label":"Concepts and Explanations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Application Structure","href":"/operon-docs/explanations/application-structure-explanation","docId":"explanations/application-structure-explanation"},{"type":"link","label":"Core Concepts","href":"/operon-docs/explanations/core-concepts","docId":"explanations/core-concepts"}],"href":"/operon-docs/category/concepts-and-explanations"}]},"docs":{"api-reference/cli":{"id":"api-reference/cli","title":"Operon CLI","description":"API documentation for the Operon CLI","sidebar":"tutorialSidebar"},"api-reference/configuration":{"id":"api-reference/configuration","title":"Operon Configuration","description":"The configuration file informs the Operon runtime how to run an application.","sidebar":"tutorialSidebar"},"api-reference/contexts":{"id":"api-reference/contexts","title":"Operon Contexts Reference","description":"API documentation for Operon Contexts","sidebar":"tutorialSidebar"},"api-reference/decorators":{"id":"api-reference/decorators","title":"Decorator Reference","description":"Usage of decorators in Operon, with exhaustive list","sidebar":"tutorialSidebar"},"api-reference/testing-runtime":{"id":"api-reference/testing-runtime","title":"Operon Testing Runtime","description":"API documentation for Operon Testing Runtime","sidebar":"tutorialSidebar"},"api-reference/workflow-handles":{"id":"api-reference/workflow-handles","title":"Workflow Handles","description":"API documentation for workflow handles","sidebar":"tutorialSidebar"},"explanations/application-structure-explanation":{"id":"explanations/application-structure-explanation","title":"Application Structure","description":"Learn about the structure of an Operon application","sidebar":"tutorialSidebar"},"explanations/core-concepts":{"id":"explanations/core-concepts","title":"Core Concepts","description":"Operon is a simple easy to use serverless framework for developing transactional applications.","sidebar":"tutorialSidebar"},"getting-started/quickstart":{"id":"getting-started/quickstart","title":"Operon Quickstart","description":"Here\'s how to get an Operon application up and running in less than five minutes!","sidebar":"tutorialSidebar"},"getting-started/quickstart-programming-1":{"id":"getting-started/quickstart-programming-1","title":"Programming Quickstart - Part 1","description":"Now that we have an application up and running, let\'s learn how to program in Operon!","sidebar":"tutorialSidebar"},"getting-started/quickstart-programming-2":{"id":"getting-started/quickstart-programming-2","title":"Programming Quickstart - Part 2","description":"Now that we\'ve written our first few functions, let\'s learn how to stitch them into powerful and reliable programs.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Introduction","description":"Welcome to Operon!","sidebar":"tutorialSidebar"},"tutorials/authentication-authorization":{"id":"tutorials/authentication-authorization","title":"Authentication and Authorization","description":"Use declarative security and middleware in Operon","sidebar":"tutorialSidebar"},"tutorials/communicator-tutorial":{"id":"tutorials/communicator-tutorial","title":"Communicators","description":"Learn how to communicate with external APIs and services","sidebar":"tutorialSidebar"},"tutorials/http-serving-tutorial":{"id":"tutorials/http-serving-tutorial","title":"HTTP Serving","description":"Learn how to serve HTTP requests","sidebar":"tutorialSidebar"},"tutorials/idempotency-tutorial":{"id":"tutorials/idempotency-tutorial","title":"Idempotency","description":"Learn how to make operations idempotent.","sidebar":"tutorialSidebar"},"tutorials/logging":{"id":"tutorials/logging","title":"Logging and Tracing","description":"Learn how to observe your Operon workflows","sidebar":"tutorialSidebar"},"tutorials/ping-pong-tutorial":{"id":"tutorials/ping-pong-tutorial","title":"Communication Example","description":"Two workflows play ping pong","sidebar":"tutorialSidebar"},"tutorials/testing-tutorial":{"id":"tutorials/testing-tutorial","title":"Testing and Debugging","description":"Learn how to use the testing runtime for unit tests.","sidebar":"tutorialSidebar"},"tutorials/transaction-tutorial":{"id":"tutorials/transaction-tutorial","title":"Transactions","description":"Learn how to perform database operations","sidebar":"tutorialSidebar"},"tutorials/using-prisma":{"id":"tutorials/using-prisma","title":"Using Prisma","description":"Learn how to create and register Prisma entities and perform transactional updates","sidebar":"tutorialSidebar"},"tutorials/using-typeorm":{"id":"tutorials/using-typeorm","title":"Using TypeORM","description":"Learn how to create and register TypeORM entities and perform transactional updates","sidebar":"tutorialSidebar"},"tutorials/workflow-communication-tutorial":{"id":"tutorials/workflow-communication-tutorial","title":"Workflow Communication","description":"Learn how to write interactive workflows","sidebar":"tutorialSidebar"},"tutorials/workflow-tutorial":{"id":"tutorials/workflow-tutorial","title":"Workflows","description":"Learn how to make applications reliable using workflows.","sidebar":"tutorialSidebar"}}}')}}]);