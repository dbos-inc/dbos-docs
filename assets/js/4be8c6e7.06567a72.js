"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[3757],{9590:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=t(4848),s=t(8453);const o={sidebar_position:2,title:"Decorators",description:"API reference for DBOS decorators.",pagination_prev:null},i=void 0,a={id:"python/reference/decorators",title:"Decorators",description:"API reference for DBOS decorators.",source:"@site/docs/python/reference/decorators.md",sourceDirName:"python/reference",slug:"/python/reference/decorators",permalink:"/python/reference/decorators",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Decorators",description:"API reference for DBOS decorators.",pagination_prev:null},sidebar:"tutorialSidebar",next:{title:"Contexts",permalink:"/python/reference/contexts"}},c={},l=[{value:"Function Decorators",id:"function-decorators",level:2},{value:"workflow",id:"workflow",level:3},{value:"step",id:"step",level:3},{value:"transaction",id:"transaction",level:3},{value:"scheduled",id:"scheduled",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"In DBOS, you annotate functions with decorators to give them properties."}),"\n",(0,r.jsx)(n.h2,{id:"function-decorators",children:"Function Decorators"}),"\n",(0,r.jsx)(n.h3,{id:"workflow",children:"workflow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"DBOS.workflow()\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Durably execute this function as a ",(0,r.jsx)(n.a,{href:"/python/tutorials/workflow-tutorial",children:"DBOS workflow"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"@DBOS.workflow()\ndef greeting_workflow(name: str, note: str):\n    sign_guestbook(name)\n    insert_greeting(name, note)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step",children:"step"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"DBOS.step(\n    retries_allowed: bool = False,\n    interval_seconds: float = 1.0,\n    max_attempts: int = 3,\n    backoff_rate: float = 2.0\n)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Mark a function as a step in a workflow.\nThis has two benefits:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"It lets workflows know this function performs a complex operation or interacts with an external service, so the workflow can guarantee those operations or interactions happen exactly-once."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"DBOS provides configurable automatic retries with exponential backoff for steps to more easily handle transient errors."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@DBOS.step(retries_allowed=True, max_attempts=10)\ndef example_step():\n    return requests.get("https://example.com").text\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"retries_allowed"}),": Whether to retry the step if it throws an exception."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"interval_seconds"}),": How long to wait before the initial retry."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"max_attempts"}),": How many times to retry a step that is throwing exceptions."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"backoff_rate"}),": How much to multiplicatively increase ",(0,r.jsx)(n.code,{children:"interval_seconds"})," between retries."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"transaction",children:"transaction"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'DBOS.transaction(\n    isolation_level: str = "SERIALIZABLE"\n)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Transactions are a special type of step that are optimized for database operations.\nThey execute as a single ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Database_transaction",children:"database transaction"}),".\nThey provide database access through the ",(0,r.jsx)(n.code,{children:"DBOS.sql_session"})," context variable."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@DBOS.transaction()\ndef example_insert(name: str, note: str) -> None:\n    # Insert a new greeting into the database\n    sql = text("INSERT INTO greetings (name, note) VALUES (:name, :note)")\n    DBOS.sql_session.execute(sql, {"name": name, "note": note})\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"isolation_level"}),": The isolation level with which to run the transaction. Must be one of ",(0,r.jsx)(n.code,{children:"SERIALIZABLE"}),", ",(0,r.jsx)(n.code,{children:"REPEATABLE READ"}),", or ",(0,r.jsx)(n.code,{children:"READ COMMITTED"}),". Defaults to ",(0,r.jsx)(n.code,{children:"SERIALIZABLE"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"scheduled",children:"scheduled"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"DBOS.scheduled(\n    cron: str\n)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Run a function on a schedule specified using ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Cron",children:"crontab"})," syntax. See ",(0,r.jsx)(n.a,{href:"https://docs.gitlab.com/ee/topics/cron/",children:"here"})," for a guide to cron syntax and ",(0,r.jsx)(n.a,{href:"https://crontab.guru/",children:"here"})," for a crontab editor."]}),"\n",(0,r.jsxs)(n.p,{children:["The annotated function must take in two parameters: The time that the run was scheduled (as a ",(0,r.jsx)(n.code,{children:"datetime"}),") and the time that the run was actually started (also a ",(0,r.jsx)(n.code,{children:"datetime"}),")."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"@DBOS.scheduled('* * * * *') # crontab syntax to run once every minute\n@DBOS.workflow()\ndef example_scheduled_workflow(scheduled_time: datetime, actual_time: datetime):\n    DBOS.logger.info(\"I am a workflow scheduled to run once a minute. \")\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cron"}),": The schedule in ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Cron",children:"crontab"})," syntax."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);