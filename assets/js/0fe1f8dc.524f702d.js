"use strict";(self.webpackChunkoperon_docs=self.webpackChunkoperon_docs||[]).push([[63],{1883:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var o=n(5893),i=n(1151);const r={sidebar_position:5,title:"Idempotency",description:"Learn how to make operations idempotent."},s=void 0,a={id:"tutorials/idempotency-tutorial",title:"Idempotency",description:"Learn how to make operations idempotent.",source:"@site/docs/tutorials/idempotency-tutorial.md",sourceDirName:"tutorials",slug:"/tutorials/idempotency-tutorial",permalink:"/tutorials/idempotency-tutorial",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Idempotency",description:"Learn how to make operations idempotent."},sidebar:"tutorialSidebar",previous:{title:"Workflows",permalink:"/tutorials/workflow-tutorial"},next:{title:"Workflow Communication",permalink:"/tutorials/workflow-communication-tutorial"}},l={},c=[{value:"Setting Idempotency Keys",id:"setting-idempotency-keys",level:3},{value:"Manually Setting Idempotency Keys",id:"manually-setting-idempotency-keys",level:3},{value:"Idempotency Example",id:"idempotency-example",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"In this guide, you'll learn how to make operations idempotent."}),"\n",(0,o.jsxs)(t.p,{children:["Operon allows users to send any request with an ",(0,o.jsx)(t.em,{children:"idempotency key"})," to guarantee it only executes once, even if the request is sent multiple times.\nThis is especially useful if your operations have side effects like making a payment or sending an email."]}),"\n",(0,o.jsx)(t.h3,{id:"setting-idempotency-keys",children:"Setting Idempotency Keys"}),"\n",(0,o.jsxs)(t.p,{children:["Operon idempotency keys are ",(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Universally_unique_identifier",children:"UUIDs"}),".\nIdempotency keys are required to be globally unique for your application.\nThere are many popular libraries for generating UUIDs in Typescript, such as ",(0,o.jsx)(t.a,{href:"https://www.npmjs.com/package/uuid",children:"uuid.js"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["To make a request idempotent, generate a UUID and set the request's ",(0,o.jsx)(t.code,{children:"operon-workflowuuid"})," header field to that UUID.\nNo matter how many times you send that request, as long as each request has the idempotency key set, the operation will only execute once (if the request is for a ",(0,o.jsx)(t.a,{href:"/tutorials/communicator-tutorial",children:"communicator"}),", it may be retried multiple times, but will not re-execute after successfully completing)."]}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsxs)(t.p,{children:["It's not a coincidence that both idempotency keys and ",(0,o.jsx)(t.a,{href:"./workflow-tutorial#workflow-identity",children:"workflow identities"})," are UUIDs.\nIf you run a workflow with an idempotency key UUID, the identity of that execution is set to that UUID."]})}),"\n",(0,o.jsx)(t.h3,{id:"manually-setting-idempotency-keys",children:"Manually Setting Idempotency Keys"}),"\n",(0,o.jsxs)(t.p,{children:["Idempotency keys are not automatically used for ",(0,o.jsx)(t.a,{href:"./http-serving-tutorial#handlers",children:"handlers"}),".\nInstead, if you invoke an operation from a handler, you can manually pass in an idempotency key as an argument to ",(0,o.jsx)(t.a,{href:"../api-reference/contexts#handlerctxtinvoketargetclass-workflowuuid",children:(0,o.jsx)(t.code,{children:"context.invoke"})}),".\nThe syntax for invoking ",(0,o.jsx)(t.code,{children:"Class.operation"})," with an idempotency key is:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:"  @GetApi(...)\n  static async exampleHandler(ctxt: HandlerContext, ...) {\n    const idempotencyKey = ...;\n    await ctxt.invoke(Class, idempotencyKey).operation(...);\n  }\n"})}),"\n",(0,o.jsx)(t.h3,{id:"idempotency-example",children:"Idempotency Example"}),"\n",(0,o.jsxs)(t.p,{children:["Let's look at this workflow endpoint from the final step of our ",(0,o.jsx)(t.a,{href:"../getting-started/quickstart-programming-2",children:"quickstart guide"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-javascript",children:"  @GetApi('/greeting/:user')\n  @OperonWorkflow()\n  static async helloWorkflow(ctxt: WorkflowContext, @ArgSource(ArgSources.URL) user: string) {\n    const greeting = await ctxt.invoke(Hello).helloTransaction(user);\n    try {\n      await ctxt.invoke(Hello).greetPostman(greeting);\n      return greeting;\n    } catch (e) {\n      ctxt.logger.error(e);\n      await ctxt.invoke(Hello).undoHelloTransaction(user);\n      return `Greeting failed for ${user}\\n`\n    }\n  }\n"})}),"\n",(0,o.jsx)(t.p,{children:"Each request to this endpoint has the side effect of incrementing a database counter.\nHowever, if we set the idempotency key, we can resend a request multiple times without side effects:"}),"\n",(0,o.jsxs)(t.p,{children:["If we ",(0,o.jsx)(t.code,{children:"curl"})," this endpoint normally multiple times, each request increments the counter:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"curl http://localhost:3000/greeting/operon\n"})}),"\n",(0,o.jsx)(t.p,{children:"However, if we set the idempotency key in the header and resend the request many times, each request returns the same response and the workflow only executes once:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'curl -H "operon-workflowuuid: 123e4567-e89b-12d3-a456-426614174000" http://localhost:3000/greeting/operon\n'})})]})}function u(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>s});var o=n(7294);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);