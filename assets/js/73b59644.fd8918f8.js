"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[875],{1426:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var i=t(5893),o=t(1151);const a={sidebar_position:9,title:"Application Lifecycle",description:"Learn about the lifecycle of a DBOS application"},s=void 0,r={id:"explanations/application-lifecycle",title:"Application Lifecycle",description:"Learn about the lifecycle of a DBOS application",source:"@site/docs/explanations/application-lifecycle.md",sourceDirName:"explanations",slug:"/explanations/application-lifecycle",permalink:"/explanations/application-lifecycle",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"Application Lifecycle",description:"Learn about the lifecycle of a DBOS application"},sidebar:"tutorialSidebar",previous:{title:"How Workflows Work",permalink:"/explanations/how-workflows-work"}},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Functions",id:"functions",level:3},{value:"Development Environment",id:"development-environment",level:3},{value:"Test Environment",id:"test-environment",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:'DBOS applications are "serverless but stateful".  This means that functions are deployed, handled by a number of compute instances that varies with time, and then potentially destroyed.'}),"\n",(0,i.jsx)(n.p,{children:'The initial state of an application, comprising its inital database population, may need to be defined.  Also, as processing instances come and go, there may be tasks that would ideally be performed prior to acceptance of any inbound function requests.  For these situations, DBOS allows "hook" functions to be defined that will be called as part of the application lifecycle.'}),"\n",(0,i.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,i.jsxs)(n.p,{children:['DBOS currently defines "initializer" functions, decorated with ',(0,i.jsx)(n.a,{href:"../api-reference/decorators#dbosinitializer",children:(0,i.jsx)(n.code,{children:"@DBOSInitializer"})}),', which run on new instances prior to accepting inbound requests.  DBOS also defines "deployment" functions, decorated with ',(0,i.jsx)(n.a,{href:"../api-reference/decorators#dbosdeploy",children:(0,i.jsx)(n.code,{children:"@DBOSDeploy"})}),", which run when an application is deployed the first time, or redeployed."]}),"\n",(0,i.jsx)(n.h3,{id:"development-environment",children:"Development Environment"}),"\n",(0,i.jsxs)(n.p,{children:["In development, which is a single node environment with potential code changes between starts, all ",(0,i.jsx)(n.code,{children:"@DBOSInitializer"})," and ",(0,i.jsx)(n.code,{children:"@DBOSDeploy"})," functions are run on each startup of the environment."]}),"\n",(0,i.jsx)(n.h3,{id:"test-environment",children:"Test Environment"}),"\n",(0,i.jsx)(n.p,{children:"In the test environment, which may simulate a number of application deployments, updates, and restarts, it may be preferable to use the test runtime's functions to control the application lifecycle."})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>s});var i=t(7294);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);