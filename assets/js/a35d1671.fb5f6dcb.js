"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[21],{6323:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=t(5893),o=t(1151);const r={sidebar_position:20,title:"OpenAPI Support",description:"Learn how to automatically generate clients for DBOS applications."},s=void 0,a={id:"tutorials/openapi-tutorial",title:"OpenAPI Support",description:"Learn how to automatically generate clients for DBOS applications.",source:"@site/docs/tutorials/openapi-tutorial.md",sourceDirName:"tutorials",slug:"/tutorials/openapi-tutorial",permalink:"/tutorials/openapi-tutorial",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20,title:"OpenAPI Support",description:"Learn how to automatically generate clients for DBOS applications."},sidebar:"tutorialSidebar",previous:{title:"Using TypeORM",permalink:"/tutorials/using-typeorm"},next:{title:"Demo Applications",permalink:"/tutorials/demo-apps"}},c={},d=[{value:"Generate OpenAPI Definition File",id:"generate-openapi-definition-file",level:3},{value:"Generate Client Code From OpenAPI Definition",id:"generate-client-code-from-openapi-definition",level:3},{value:"Specify OpenAPI Security Scheme and Requirements",id:"specify-openapi-security-scheme-and-requirements",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/api-reference/cli",children:"DBOS CLI"})," v0.6 adds the ",(0,i.jsx)(n.code,{children:"dbos-openapi generate"})," command that generates an ",(0,i.jsx)(n.a,{href:"https://www.openapis.org/",children:"OpenAPI 3.0.x"})," definition file for a DBOS application.\nThis definition file can be used to automatically generate strongly typed client code to invoke DBOS application endpoints."]}),"\n",(0,i.jsx)(n.h3,{id:"generate-openapi-definition-file",children:"Generate OpenAPI Definition File"}),"\n",(0,i.jsxs)(n.p,{children:["First, install ",(0,i.jsx)(n.code,{children:"@dbos-inc/dbos-openapi"})," as a development dependency in your project:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"npm install --save-dev @dbos-inc/dbos-openapi\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To generate a OpenAPI definition file for a DBOS application, run the following ",(0,i.jsx)(n.code,{children:"dbos-openapi"})," cli command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"npx dbos-openapi generate src/operations.ts\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This command takes a single required argument - the path to the DBOS application's TypeScript entrypoint file.\nFor DBOS applications generated by ",(0,i.jsx)(n.a,{href:"/api-reference/cli#npx-dbos-sdk-init",children:(0,i.jsx)(n.code,{children:"dbos-sdk init"})}),", the entrypoint will be ",(0,i.jsx)(n.code,{children:"src/operations.ts"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"dbos-openapi generate"})," command generates an OpenAPI definition file ",(0,i.jsx)(n.code,{children:"openapi.yaml"})," in the same folder as the entrypoint file."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["This entrypoint argument is slightly different from the ",(0,i.jsx)(n.a,{href:"/api-reference/configuration#runtime",children:(0,i.jsx)(n.code,{children:"runtimeConfig.entrypoint"})})," config setting.\nThe ",(0,i.jsx)(n.code,{children:"dbos-openapi generate"})," argument references the TypeScript entrypoint file.\nThe ",(0,i.jsx)(n.code,{children:"runtimeConfig.entrypoint"})," setting references the JavaScript file generated from the TypeScript entrypoint file."]})}),"\n",(0,i.jsx)(n.h3,{id:"generate-client-code-from-openapi-definition",children:"Generate Client Code From OpenAPI Definition"}),"\n",(0,i.jsx)(n.p,{children:"Multiple vendors provide OpenAPI client generators that will work with a generated OpenAPI declaration file.\nEach of these vendors have tools and documentation for generating client code for a variety of languages and runtimes.\nSome of these tools include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/openapi/kiota/overview",children:"Microsoft Kiota"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://openapi-generator.tech/",children:"OpenAPI Generator"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://swagger.io/tools/swagger-codegen/",children:"Swagger CodeGen"})," and ",(0,i.jsx)(n.a,{href:"https://editor.swagger.io/",children:"Online Editor"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://openapi-ts.pages.dev/",children:"openapi-typescript"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/oazapfts/oazapfts",children:"oazapfts"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/ferdikoomen/openapi-typescript-codegen",children:"OpenAPI Typescript Codegen"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"We can't provide tutorials for all of these OpenAPI generator tools, but the Swagger Editor runs in the browser so is straightforward to use for a simple tutorial"}),"\n",(0,i.jsxs)(n.p,{children:["First, you need to run ",(0,i.jsx)(n.code,{children:"npx dbos-openapi generate"})," against your DBOS application entrypoint as described above."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Note, the shop and payment backend applications from the ",(0,i.jsx)(n.a,{href:"/tutorials/demo-apps#e-commerce",children:"DBOS E-Commerce demo app"}),"\ninclude generated OpenApi definition files if you want to try this without creating your own application."]})}),"\n",(0,i.jsxs)(n.p,{children:["Then, copy and paste the contents of the generated ",(0,i.jsx)(n.code,{children:"openapi.yaml"})," file into ",(0,i.jsx)(n.a,{href:"https://editor.swagger.io/",children:"Swagger Editor"}),".\nSwagger Editor will validate the OpenAPI definitions and render a documentation page for the api."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Note, the Swagger Editor generated documentation includes tooling to trigger OpenAPI endpoints from directly in the web page.\nThis tooling will not work as the OpenAPI definition generated by ",(0,i.jsx)(n.code,{children:"dbos-openapi generate"})," does not include server URL information."]})}),"\n",(0,i.jsx)(n.p,{children:'At the top of the Swagger Editor, there is a "Generate Client" dropdown menu. Select typescript-axios from the menu.\nThis will download a zip file containing a TypeScript package with the code generated from the OpenAPI definition.'}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"typescript-axios"})," Swagger generator generates a full TypeScript package that supports ",(0,i.jsx)(n.code,{children:"npm install"})," and ",(0,i.jsx)(n.code,{children:"npm run build"}),".\nTypically, you would incorporate the generated code into an existing client projects that needs to call into the DBOS project."]}),"\n",(0,i.jsxs)(n.p,{children:["Here is some example code using the ",(0,i.jsx)(n.code,{children:"typescript-axios"})," Swagger generator and the OpenAPI definition for the ",(0,i.jsx)(n.a,{href:"https://github.com/dbos-inc/dbos-demo-apps/tree/main/e-commerce/shop-backend",children:"E-Commerce Demo Shop DBOS application"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import { Configuration, DefaultApi } from "./index";\n\nconst config = new Configuration({\n    basePath: "http://localhost:8082"\n});\n\nconst api = new DefaultApi(config);\n\nasync function main() {\n    const response = await api.getProducts();\n    for (const product of response.data) {\n        console.log(product.description);\n    }\n}\n\nmain();\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["As mentioned earlier, the OpenAPI definition file generated for an application does not include server URL information.\nThe server ",(0,i.jsx)(n.code,{children:"basePath"})," must be included programmatically as in the code snippet above, regardless of the OpenAPI generator you choose to use."]})}),"\n",(0,i.jsx)(n.h3,{id:"specify-openapi-security-scheme-and-requirements",children:"Specify OpenAPI Security Scheme and Requirements"}),"\n",(0,i.jsxs)(n.p,{children:["DBOS ",(0,i.jsx)(n.a,{href:"http://localhost:3000/tutorials/http-serving-tutorial#handlers",children:"handlers"})," (i.e. methods with ",(0,i.jsx)(n.code,{children:"@GetApi"})," or ",(0,i.jsx)(n.code,{children:"@PostApi"}),")\nare mapped to OpenAPI ",(0,i.jsx)(n.a,{href:"https://spec.openapis.org/oas/v3.0.3#path-item-object",children:"path items"}),".\nPath item operations optionally include security requirements, which map to security schemes defined in the\n",(0,i.jsx)(n.code,{children:"components.securitySchemes"})," section of the  OpenAPI definition file.\nSome OpenAPI generators use this information to automatically manage user credentials in the generated client code."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/tutorials/authentication-authorization",children:"Authentication"})," in DBOS is done via the middleware function passed to ",(0,i.jsx)(n.code,{children:"@Authentication"}),".\nParsing the authentication logic to determine the OpenAPI security scheme information is not feasible.\nTo include authentication information in the OpenAPI file, declare the security scheme via the ",(0,i.jsx)(n.code,{children:"@OpenApiSecurityScheme"})," class decorator."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"@Authentication(authMiddleware)\n@OpenApiSecurityScheme({ type: 'http', scheme: 'bearer' })\nexport class Operations {\n  @GetApi(\"/post/:id\")\n  @RequiredRoles(['user'])\n  static async getPost(ctx: TransactionContext, @ArgSource(ArgSources.URL) id: string) {\n    ...\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"@OpenApiSecurityScheme"})," decorator takes a single parameter, matching a supported security scheme\n",(0,i.jsx)(n.a,{href:"https://spec.openapis.org/oas/v3.0.3#security-scheme-object",children:"from the OpenAPI spec"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"dbos-openapi generate"})," does not support the ",(0,i.jsx)(n.code,{children:"oauth2"})," OpenAPI security scheme at this time."]})}),"\n",(0,i.jsxs)(n.p,{children:["All handler methods on a class use the same ",(0,i.jsx)(n.code,{children:"@OpenApiSecurityScheme"})," in the generated OpenAPI definition,\nexcept for methods that have no specified ",(0,i.jsx)(n.a,{href:"./authentication-authorization#authorization-decorators",children:(0,i.jsx)(n.code,{children:"@RequiredRoles"})}),".\nDBOS does not check authentication or authorization info for methods without any required roles.\nMethods without any required roles do not emit security requirements in the generated OpenAPI definition file."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"@Authentication(authMiddleware)\n@DefaultRequiredRoles(['user'])\n@OpenApiSecurityScheme({ type: 'http', scheme: 'bearer' })\nexport class Operations {\n  @PostApi('/api/login')\n  @RequiredRoles([])\n  static async login(ctx: HandlerContext, username: string, password: string) {\n    ...\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"This allows a developer to have authenticated and non authenticated methods within a single class.\nIf you need to support different security schemes for different methods, those need to be divided into separate classes."})]})}function l(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>s});var i=t(7294);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);