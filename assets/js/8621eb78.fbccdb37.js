"use strict";(self.webpackChunkoperon_docs=self.webpackChunkoperon_docs||[]).push([[59],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),f=o,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1314:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1,title:"Operon Project Structure",description:"Learn how to structure an Operon application"},i=void 0,l={unversionedId:"tutorials/project-structure-tutorial",id:"tutorials/project-structure-tutorial",title:"Operon Project Structure",description:"Learn how to structure an Operon application",source:"@site/docs/tutorials/project-structure-tutorial.md",sourceDirName:"tutorials",slug:"/tutorials/project-structure-tutorial",permalink:"/operon-docs/tutorials/project-structure-tutorial",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Operon Project Structure",description:"Learn how to structure an Operon application"},sidebar:"tutorialSidebar",previous:{title:"Tutorials",permalink:"/operon-docs/category/tutorials"},next:{title:"HTTP handlers",permalink:"/operon-docs/tutorials/handlers-tutorial"}},s={},c=[],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this guide, you'll learn how to structure an Operon project.\nWhen you initialize an Operon project with ",(0,o.kt)("inlineCode",{parentName:"p"},"npx operon init"),", it has the following structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"operon-hello-app/\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 knexfile.ts\n\u251c\u2500\u2500 migrations/\n\u251c\u2500\u2500 node_modules/\n\u251c\u2500\u2500 operon-config.yaml\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 src/\n\u2502   \u2514\u2500\u2500 userFunctions.ts\n\u251c\u2500\u2500 start_postgres_docker.sh\n\u2514\u2500\u2500 tsconfig.json\n")),(0,o.kt)("p",null,"The two most important files in an Operon project are ",(0,o.kt)("inlineCode",{parentName:"p"},"operon-config.yaml")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"src/userFunctions.ts"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"operon-config.yaml")," defines the configuration of an Operon project, including database connection information, ORM configuration, and global logging configuration.\nAll options are documented in our ",(0,o.kt)("a",{parentName:"p",href:".."},"configuration reference"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"src/userFunctions.ts")," is where Operon looks for your code.\nAt startup, the Operon runtime automatically loads all classes exported from this file, serving their endpoints and registering their transactions and workflows.\nIf you're writing a small application, you can write all your code directly in this file.\nIn a larger application, you can write your code wherever you want, but should use ",(0,o.kt)("inlineCode",{parentName:"p"},"src/userFunctions.ts")," as an index file, exporting code written elsewhere."),(0,o.kt)("p",null,"As for the rest of the directory:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"knexfile.ts")," is a configuration file for ",(0,o.kt)("a",{parentName:"li",href:"https://knexjs.org"},"Knex"),", which we use as a query builder and migration tool."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"migrations")," is initialized with a Knex database migration used in the ",(0,o.kt)("a",{parentName:"li",href:"../getting-started/quickstart"},"quickstart guide"),".  If you're using Knex for schema management, you can create your own migrations here."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"node_modules"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"package-lock.json"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"package.json"),", and ",(0,o.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," are needed by all Node/Typescript projects."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"start_postgres_docker.sh")," is a convenience script that initializes a Docker-hosted Postgres database for use in the ",(0,o.kt)("a",{parentName:"li",href:"../getting-started/quickstart"},"quickstart"),".  You can modify this script if you want to use Docker-hosted Postgres for local development.")))}d.isMDXComponent=!0}}]);