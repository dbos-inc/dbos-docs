"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[3473],{888:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"why-dbos","title":"Why DBOS?","description":"DBOS helps you write code that is reliable and fault-tolerant by default.","source":"@site/docs/why-dbos.md","sourceDirName":".","slug":"/why-dbos","permalink":"/why-dbos","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"hide_table_of_contents":true},"sidebar":"tutorialSidebar","previous":{"title":"Get Started","permalink":"/quickstart"},"next":{"title":"Learn DBOS Python","permalink":"/python/programming-guide"}}');var l=n(4848),o=n(8453);const a={hide_table_of_contents:!0},t="Why DBOS?",i={},c=[{value:"Using DBOS",id:"using-dbos",level:2},{value:"DBOS Cloud",id:"dbos-cloud",level:2},{value:"Get Started",id:"get-started",level:2}];function d(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{TabItem:n,Tabs:r}=s;return n||u("TabItem",!0),r||u("Tabs",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"why-dbos",children:"Why DBOS?"})}),"\n",(0,l.jsxs)(s.p,{children:["DBOS helps you write code that is ",(0,l.jsx)(s.strong,{children:"reliable"})," and ",(0,l.jsx)(s.strong,{children:"fault-tolerant"})," by default.\nDBOS ",(0,l.jsx)(s.strong,{children:"durably executes"})," your programs, so that if they fail, upon restart they automatically resume from where they left off.\nThis makes all sorts of programs easier to write:"]}),"\n",(0,l.jsxs)(r,{groupId:"examples",children:[(0,l.jsx)(n,{value:"workflow",label:"Reliable Workflows",children:(0,l.jsxs)("section",{className:"row list",children:[(0,l.jsxs)("article",{className:"col col--4",children:[(0,l.jsx)(s.p,{children:"Write your business logic in normal code, with branches, loops, subtasks, and retries. DBOS makes it resilient to any failure."}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.a,{href:"/python/examples/widget-store",children:"See an example \u2197\ufe0f"})})]}),(0,l.jsx)("article",{className:"col col--8",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-python",children:"@DBOS.workflow()\ndef checkout_workflow(items):\n   order = create_order()\n   reserve_inventory(order, items)\n   payment_status = process_payment(order, items)\n   if payment_status == 'paid':\n       fulfill_order(order)\n   else:\n       undo_reserve_inventory(order, items)\n       cancel_order(order)\n"})})})]})}),(0,l.jsx)(n,{value:"background",label:"Background Tasks",children:(0,l.jsxs)("section",{className:"row list",children:[(0,l.jsxs)("article",{className:"col col--4",children:[(0,l.jsx)(s.p,{children:"Launch any task to run in the background and guarantee it eventually completes.\nWait for days or weeks, or for a notification, before continuing\u2014it just works."}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.a,{href:"/python/examples/scheduled-reminders",children:"See an example \u2197\ufe0f"})})]}),(0,l.jsx)("article",{className:"col col--8",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-python",children:'@DBOS.workflow()\ndef schedule_reminder(to_email: str, days_to_wait: int):\n    DBOS.sleep(days_to_seconds(days_to_wait))\n    send_reminder_email(to_email, days_to_wait)\n\n@app.post("/email")\ndef email_endpoint(request):\n    DBOS.start_workflow(schedule_reminder, request.email, request.days)\n'})})})]})}),(0,l.jsx)(n,{value:"cron",label:"Cron Jobs",children:(0,l.jsxs)("section",{className:"row list",children:[(0,l.jsxs)("article",{className:"col col--4",children:[(0,l.jsx)(s.p,{children:"Schedule functions to run at specific times.\nHost them completely serverlessly."}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.a,{href:"/python/examples/cron-starter",children:"Get started \u2197\ufe0f"})})]}),(0,l.jsx)("article",{className:"col col--8",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-python",children:'@DBOS.scheduled("0 * * * *") # Run once an hour\n@DBOS.workflow()\ndef run_hourly(scheduled_time: datetime, actual_time: datetime):\n   results = search_hackernews("serverless")\n   for comment, url in results:\n      post_to_slack(comment, url)\n'})})})]})}),(0,l.jsx)(n,{value:"pipelines",label:"Data Pipelines",children:(0,l.jsxs)("section",{className:"row list",children:[(0,l.jsxs)("article",{className:"col col--4",children:[(0,l.jsx)(s.p,{children:"Build data pipelines that are reliable and observable by default.\nDBOS durable queues guarantee all your tasks complete."}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.a,{href:"/python/examples/document-detective",children:"See an example \u2197\ufe0f"})})]}),(0,l.jsx)("article",{className:"col col--8",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-python",children:'queue = Queue("indexing_queue")\n\n@DBOS.workflow()\ndef indexing_workflow(urls: List[HttpUrl]):\n  handles: List[WorkflowHandle] = []\n  for url in urls:\n     handle = queue.enqueue(index_document, url)\n     handles.append(handle)\nindexed_pages = 0\nfor handle in handles:\n     indexed_pages += handle.get_result()\nlogger.info(f"Indexed {len(urls)} documents, {indexed_pages} pages")\n'})})})]})}),(0,l.jsx)(n,{value:"kafka",label:"Kafka",children:(0,l.jsxs)("section",{className:"row list",children:[(0,l.jsxs)("article",{className:"col col--4",children:[(0,l.jsx)(s.p,{children:"Consume Kafka messages exactly-once, no need to worry about timeouts or offsets."}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.a,{href:"/python/tutorials/kafka-integration",children:"Learn more \u2197\ufe0f"})})]}),(0,l.jsx)("article",{className:"col col--8",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-python",children:'@DBOS.kafka_consumer(config,["alerts-topic"])\n@DBOS.workflow()\ndef process_kafka_alerts(msg: KafkaMessage):\n  alerts = msg.value.decode()\n  for alert in alerts:\n    respond_to_alert(alert)\n'})})})]})}),(0,l.jsx)(n,{value:"webhooks",label:"Webhooks",children:(0,l.jsxs)("section",{className:"row list",children:[(0,l.jsxs)("article",{className:"col col--4",children:[(0,l.jsx)(s.p,{children:"Effortlessly mix synchronous webhook code with asynchronous event processing. Reliably wait weeks or months for events, then use idempotency and durable execution to process them exactly once."}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.a,{href:"/python/examples/rag-slackbot",children:"See an example \u2197\ufe0f"})})]}),(0,l.jsx)("article",{className:"col col--8",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-python",children:'@slackapp.message()\ndef handle_message(request: BoltRequest) -> None:\n  event_id = request.body["event_id"]\n  with SetWorkflowID(event_id):\n    DBOS.start_workflow(message_workflow, request.body["event"])\n'})})})]})}),(0,l.jsx)(n,{value:"agents",label:"AI Agents",children:(0,l.jsxs)("section",{className:"row list",children:[(0,l.jsxs)("article",{className:"col col--4",children:[(0,l.jsx)(s.p,{children:"Enhance your AI agents with tools that can run asynchronous tasks and keep a human in the loop.\nIntegrate with popular frameworks like LangChain and LlamaIndex."}),(0,l.jsx)(s.p,{children:(0,l.jsx)(s.a,{href:"/python/examples/reliable-ai-agent",children:"See an example \u2197\ufe0f"})})]}),(0,l.jsx)("article",{className:"col col--8",children:(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-python",children:'@DBOS.workflow()\ndef agentic_refund(purchase):\n    # Escalate refunds of expensive items to a human for approval\n    if purchase.price > 1000:\n        email_human_for_approval(purchase)\n        status = DBOS.recv(timeout_seconds=APPROVAL_TIMEOUT)\n        if status == "approve":\n            approve_refund(purchase)\n        else:\n            reject_refund(purchase)\n    else:\n        approve_refund(purchase)\n'})})})]})})]}),"\n",(0,l.jsx)(s.h2,{id:"using-dbos",children:"Using DBOS"}),"\n",(0,l.jsxs)(s.p,{children:["All you need to do to use DBOS is install the open-source DBOS Transact library (",(0,l.jsx)(s.a,{href:"https://github.com/dbos-inc/dbos-transact-py",children:"Python"}),", ",(0,l.jsx)(s.a,{href:"https://github.com/dbos-inc/dbos-transact-ts",children:"TypeScript"}),").\nTo use the library, annotate ",(0,l.jsx)(s.em,{children:"workflows"})," and ",(0,l.jsx)(s.em,{children:"steps"})," in your program like this:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-python",children:"@DBOS.step()\ndef step_one():\n    ...\n\n@DBOS.step()\ndef step_two():\n    ...\n\n@DBOS.workflow()\ndef workflow()\n    step_one()\n    step_two()\n"})}),"\n",(0,l.jsx)(s.p,{children:"If your program is ever interrupted or crashed, all your workflows automatically resume from the last completed step."}),"\n",(0,l.jsx)(s.p,{children:"Under the hood, DBOS works by storing your program's execution state (e.g., which workflows are currently executing and which steps they've completed) in a Postgres database.\nSo all DBOS needs to work is a Postgres database to connect to\u2014there's no need for a separate \"workflow server.\""}),"\n",(0,l.jsx)(s.p,{children:"DBOS provides many powerful features you can use to build reliable programs, including:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Durable queues"}),": Run many durable workflows in parallel, with controlled concurrency."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Durable sleeps and notifications"}),": Workflows can wait for days or weeks, or for a notification, and will always resume on schedule."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Scheduled workflows"}),": Start a workflow exactly-once per time interval."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Exactly-once event processing"}),": Start a durable workflow exactly-once per incoming event, for example from Kafka."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Idempotency"}),": Use built-in idempotency keys to start a workflow only once, no matter how many times it is called with that key."]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"dbos-cloud",children:"DBOS Cloud"}),"\n",(0,l.jsx)(s.p,{children:"Any program you build with DBOS you can deploy for free to DBOS Cloud.\nYou can deploy any program with a single command\u2014no configuration required.\nYour program runs the same in the cloud as it does locally, but operating it is much simpler thanks to:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"No servers to manage"}),": We serverlessly deploy your applications for you."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Autoscaling"}),": Your application automatically scales with load, potentially to millions of users."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Pay only for the CPU time you actually use"}),": Pay only when you're using your app, and nothing at all for idle time."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.strong,{children:"Built-in observability"}),": View your logs and traces and manage your application from the ",(0,l.jsx)(s.a,{href:"https://console.dbos.dev",children:"cloud console"}),"."]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"get-started",children:"Get Started"}),"\n",(0,l.jsxs)(s.p,{children:["What are you waiting for?  Check out the ",(0,l.jsx)(s.a,{href:"/quickstart",children:"quickstart"})," to get started!"]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}function u(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>t});var r=n(6540);const l={},o=r.createContext(l);function a(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);