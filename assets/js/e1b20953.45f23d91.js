"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[1868],{7145:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"python/tutorials/database-connection","title":"DBOS Database Connections","description":"DBOS uses a database to durably store workflow and step state.","source":"@site/docs/python/tutorials/database-connection.md","sourceDirName":"python/tutorials","slug":"/python/tutorials/database-connection","permalink":"/python/tutorials/database-connection","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":100,"frontMatter":{"sidebar_position":100,"title":"DBOS Database Connections"},"sidebar":"tutorialSidebar","previous":{"title":"Testing Your App","permalink":"/python/tutorials/testing"},"next":{"title":"DBOS Class","permalink":"/python/reference/dbos-class"}}');var a=t(4848),o=t(8453);const i={sidebar_position:100,title:"DBOS Database Connections"},r=void 0,c={},d=[{value:"Configuring the System Database Connection",id:"configuring-the-system-database-connection",level:2},{value:"Transactions and the Application Database",id:"transactions-and-the-application-database",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["DBOS uses a database to durably store workflow and step state.\nThis database is called the ",(0,a.jsx)(n.strong,{children:"system database"}),".\nIts schema is documented ",(0,a.jsx)(n.a,{href:"/explanations/system-tables",children:"here"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["You can use either a SQLite or Postgres database.\nA SQLite database is just a file on disk, while a Postgres database is a server that your application connects to.\nBy default, DBOS uses SQLite.\nSQLite is excellent for prototyping and testing because it requires no configuration or server.\nHowever, because a SQLite database is just a file on disk, it can't be used in a distributed setting where an application runs on multiple servers.\nTherefore, ",(0,a.jsx)(n.strong,{children:"for production, we recommend using Postgres"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"configuring-the-system-database-connection",children:"Configuring the System Database Connection"}),"\n",(0,a.jsxs)(n.p,{children:["You can configure the database DBOS connects to through the ",(0,a.jsx)(n.code,{children:"system_database_url"})," field of ",(0,a.jsx)(n.code,{children:"DBOSConfig"}),".\nFor example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'config: DBOSConfig = {\n    "name": "dbos-example",\n    "system_database_url": os.environ["DBOS_SYSTEM_DATABASE_URL"],\n}\nDBOS(config=config)\n'})}),"\n",(0,a.jsx)(n.p,{children:"A valid Postgres connection string looks like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"postgresql://[username]:[password]@[hostname]:[port]/[database name]\n"})}),"\n",(0,a.jsx)(n.p,{children:"For example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"postgresql://postgres:dbos@localhost:5432/dbos_example\n"})}),"\n",(0,a.jsx)(n.p,{children:"A valid SQLite connection string looks like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"sqlite:///[path to database file]\n"})}),"\n",(0,a.jsx)(n.p,{children:"For example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"sqlite:///dbos_example.sqlite\n"})}),"\n",(0,a.jsxs)(n.p,{children:["For more information on DBOS configuration, see ",(0,a.jsx)(n.a,{href:"/python/reference/configuration",children:"the reference"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"transactions-and-the-application-database",children:"Transactions and the Application Database"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/python/tutorials/transaction-tutorial",children:"Transactions"})," are a special kind of step used for database accesses.\nTransactions need to run in the database in which your application stores data.\nYou can specify the database in which transactions run by setting an ",(0,a.jsx)(n.code,{children:"application_database_url"})," when you configure DBOS.\nThe application database (the database in which transactions run) does not need to be the same database (or even on the same server) as your system database.\nFor example:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'config: DBOSConfig = {\n    "name": "dbos-example",\n    "system_database_url": os.environ["DBOS_SYSTEM_DATABASE_URL"],\n    "application_database_url": os.environ["APP_DATABASE_URL"],\n}\nDBOS(config=config)\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["If you are not using transactions, you do not need to set ",(0,a.jsx)(n.code,{children:"application_database_url"}),"."]})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(6540);const a={},o=s.createContext(a);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);