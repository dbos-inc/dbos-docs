"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[3977],{2513:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var i=n(4848),r=n(8453);const a={sidebar_position:9,title:"Authentication and Authorization",description:"Use declarative security and middleware in DBOS"},s=void 0,o={id:"typescript/tutorials/authentication-authorization",title:"Authentication and Authorization",description:"Use declarative security and middleware in DBOS",source:"@site/docs/typescript/tutorials/authentication-authorization.md",sourceDirName:"typescript/tutorials",slug:"/typescript/tutorials/authentication-authorization",permalink:"/typescript/tutorials/authentication-authorization",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"Authentication and Authorization",description:"Use declarative security and middleware in DBOS"},sidebar:"tutorialSidebar",previous:{title:"Testing and Debugging",permalink:"/typescript/tutorials/testing-tutorial"},next:{title:"Configuring Class Instances",permalink:"/typescript/tutorials/configured-instances"}},c={},d=[{value:"Authentication Middleware",id:"authentication-middleware",level:2},{value:"Authorization Decorators",id:"authorization-decorators",level:2},{value:"Example",id:"example",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"This section covers declarative authentication and authorization in DBOS."}),"\n",(0,i.jsxs)(t.p,{children:["DBOS supports modular, built-in declarative security: you can use the ",(0,i.jsx)(t.a,{href:"../reference/decorators#authentication",children:(0,i.jsx)(t.code,{children:"@Authentication"})})," class decorator to make user identities available to DBOS contexts. Further, you can associate operations with a list of permitted roles using the ",(0,i.jsx)(t.a,{href:"../reference/decorators#requiredrole",children:(0,i.jsx)(t.code,{children:"@RequiredRole"})})," API."]}),"\n",(0,i.jsx)(t.admonition,{title:"note",type:"info",children:(0,i.jsxs)(t.p,{children:["You can fully implement authentication and authorization using custom ",(0,i.jsx)(t.a,{href:"../tutorials/http-serving-tutorial#middleware",children:"HTTP middleware"})," which will run before the request reaches the handler. This section describes mechanisms DBOS provides to make it easier."]})}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["If you're generating an ",(0,i.jsx)(t.a,{href:"https://spec.openapis.org/oas/v3.0.3",children:"OpenAPI interface definition"})," for your DBOS application,\nyou can specify security scheme information via the ",(0,i.jsx)(t.code,{children:"@OpenApiSecurityScheme"})," decorator.\nPlease see the ",(0,i.jsx)(t.a,{href:"/typescript/tutorials/openapi-tutorial#specify-openapi-security-scheme-and-requirements",children:"OpenAPI Tutorial"})," for more information."]})}),"\n",(0,i.jsx)(t.h2,{id:"authentication-middleware",children:"Authentication Middleware"}),"\n",(0,i.jsxs)(t.p,{children:["To instruct DBOS to perform authentication for an HTTP endpoint, you can use the ",(0,i.jsx)(t.a,{href:"../reference/decorators#authentication",children:(0,i.jsx)(t.code,{children:"@Authentication"})})," class decorator to register HTTP middleware with your custom authentication logic (for example validating a ",(0,i.jsx)(t.a,{href:"https://jwt.io/",children:"JSON Web Token"})," and retrieving user credentials and permissions from the decoded token).\nThe decorator should return a structure containing identity and claimed roles:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:'return {\n    authenticatedUser: "Mary",\n    authenticatedRoles: ["user", "admin"],\n};\n'})}),"\n",(0,i.jsxs)(t.p,{children:["When serving a request from an HTTP endpoint, DBOS runs the authentication middleware before running the requested operation and makes this information available in the operation's ",(0,i.jsx)(t.a,{href:"../reference/contexts#dboscontext",children:"context"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"authorization-decorators",children:"Authorization Decorators"}),"\n",(0,i.jsxs)(t.p,{children:["To declare a list of roles that are authorized to run the methods in a class, use the ",(0,i.jsx)(t.a,{href:"../reference/decorators#defaultrequiredrole",children:(0,i.jsx)(t.code,{children:"@DefaultRequiredRole"})})," class decorator:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"@DefaultRequiredRole(['user'])\nclass Operations\n{\n  // Most operations will be user-level\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["At runtime, before running an operation, DBOS verifies that the operation context contains an authenticated role listed in its required roles.\nFor exceptions, requiring more or less privilege than the default, you can specify ",(0,i.jsx)(t.a,{href:"../reference/decorators#requiredrole",children:(0,i.jsx)(t.code,{children:"@RequiredRole"})})," at the method level"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"@DefaultRequiredRole(['user'])\nclass Operations\n{\n  // Most operations will be user-level\n\n  // Registering a new user doesn't require privilege\n  @RequiredRole([])\n  static async doRegister(ctx: DBOSContext, firstName: string, lastName: string){}\n\n  // Deleting a user requires escalated privilege\n  @RequiredRole(['admin'])\n  static async deleteOtherUser(ctx: DBOSContext, otherUser: string){}\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.p,{children:"In this example, we demonstrate how to use DBOS declarative security:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:'// Resolve request identity using HTTP headers.\n// You can replace this logic with robust methods such as JWT.\nconst authenticationMiddleware = (ctx: MiddlewareContext) => {\n  return {\n    // Extract username from headers\n    authenticatedUser: ctx.koaContext?.header.username,\n    // Attribute role "appUser" to incoming requests\n    authenticatedRoles: ["appUser"],\n  };\n};\n\n@Authentication(authenticationMiddleware)\n@DefaultRequiredRole("appUser")\nexport class Hello {\n  ...\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Here, we instruct the ",(0,i.jsx)(t.code,{children:"Hello"})," class to run ",(0,i.jsx)(t.code,{children:"authenticationMiddleware"})," on all incoming HTTP requests.\nWe require requests to authenticate with the ",(0,i.jsx)(t.code,{children:"appUser"})," role to reach any HTTP handler declared in ",(0,i.jsx)(t.code,{children:"Hello"}),".\nThe authentication function simply parses the username from the HTTP headers.\nYou can replace this with a more robust authentication method, such as ",(0,i.jsx)(t.a,{href:"https://jwt.io/",children:"JSON Web Tokens"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["For applications that manage their own users, it is possible to access the database in a read-only way from the ",(0,i.jsx)(t.code,{children:"MiddlewareContext"})," (Knex shown):"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:'  static async authMiddlware(ctx: MiddlewareContext) {\n    if (!ctx.requiredRole || !ctx.requiredRole.length) {\n      return;\n    }\n    const {user} = ctx.koaContext.query;\n    if (!user) {\n      throw new DBOSNotAuthorizedError("User not provided", 401);\n    }\n    const u = await ctx.query(\n      (dbClient: Knex, uname: string) => {\n        return dbClient<UserTable>(userTableName).select("username").where({ username: uname })\n      }, user as string);\n\n    if (!u || !u.length) {\n      throw new DBOSNotAuthorizedError("User does not exist", 403);\n    }\n\n    // NOTE: Validate credentials against database\n\n    ctx.logger.info(`Allowed in user: ${u[0].username}`);\n    return {\n      authenticatedUser: u[0].username!,\n      authenticatedRoles: ["user"],\n    };\n  }\n\n'})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var i=n(6540);const r={},a=i.createContext(r);function s(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);