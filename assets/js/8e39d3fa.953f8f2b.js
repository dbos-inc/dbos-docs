"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[8366],{2591:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>r,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"production/dbos-cloud/database-management","title":"Database Management","description":"Learn how to manage DBOS Cloud database instances","source":"@site/docs/production/dbos-cloud/database-management.md","sourceDirName":"production/dbos-cloud","slug":"/production/dbos-cloud/database-management","permalink":"/production/dbos-cloud/database-management","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_position":40,"title":"Database Management","description":"Learn how to manage DBOS Cloud database instances"},"sidebar":"tutorialSidebar","previous":{"title":"Account Management","permalink":"/production/dbos-cloud/account-management"},"next":{"title":"Bringing Your Own Database","permalink":"/production/dbos-cloud/byod-management"}}');var o=n(4848),t=n(8453);const i={sidebar_position:40,title:"Database Management",description:"Learn how to manage DBOS Cloud database instances"},d=void 0,r={},c=[{value:"Provisioning Database Instances",id:"provisioning-database-instances",level:3},{value:"Database Schema Management",id:"database-schema-management",level:3},{value:"Destroying Database Instances",id:"destroying-database-instances",level:3}];function l(e){const a={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.h3,{id:"provisioning-database-instances",children:"Provisioning Database Instances"}),"\n",(0,o.jsx)(a.p,{children:"Before you can deploy an application to DBOS Cloud, you must provision a Postgres database instance (server) for it.\nYou must choose a database instance name, username and password."}),"\n",(0,o.jsx)(a.admonition,{type:"info",children:(0,o.jsxs)(a.ul,{children:["\n",(0,o.jsx)(a.li,{children:"Both the database instance name and username must be 3 to 16 characters long and contain only lowercase letters, numbers and underscores."}),"\n",(0,o.jsx)(a.li,{children:"The username must start with a letter."}),"\n",(0,o.jsxs)(a.li,{children:["The usernames ",(0,o.jsx)(a.code,{children:"dbosadmin"}),", ",(0,o.jsx)(a.code,{children:"dbos"}),", ",(0,o.jsx)(a.code,{children:"postgres"})," and ",(0,o.jsx)(a.code,{children:"admin"})," are reserved and cannot be used."]}),"\n",(0,o.jsxs)(a.li,{children:["The database password must contain between 8 and 128 characters, and cannot contain the characters ",(0,o.jsx)(a.code,{children:"/"}),", ",(0,o.jsx)(a.code,{children:'"'}),", ",(0,o.jsx)(a.code,{children:"@"}),", ",(0,o.jsx)(a.code,{children:"'"}),", or whitespaces."]}),"\n"]})}),"\n",(0,o.jsx)(a.p,{children:"Run this command and choose your database password when prompted:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-shell",children:"dbos-cloud db provision <database-instance-name> -U <database-username>\n"})}),"\n",(0,o.jsx)(a.admonition,{type:"info",children:(0,o.jsxs)(a.p,{children:["A Postgres database instance (server) can host many independent databases used by different applications.\nEach application is deployed to an isolated database by default; you can configure this through the ",(0,o.jsx)(a.code,{children:"app_db_name"})," field in ",(0,o.jsx)(a.code,{children:"dbos-config.yaml"}),"."]})}),"\n",(0,o.jsx)(a.admonition,{type:"info",children:(0,o.jsxs)(a.p,{children:["If you forget your database password, you can always ",(0,o.jsx)(a.a,{href:"/production/dbos-cloud/cloud-cli#dbos-cloud-db-reset-password",children:"reset it"}),"."]})}),"\n",(0,o.jsx)(a.p,{children:"To see a list of all provisioned instances and their statuses, run:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-shell",children:"dbos-cloud db list\n"})}),"\n",(0,o.jsx)(a.p,{children:"To retrieve the status of a particular instance, run:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-shell",children:"dbos-cloud db status <database-instance-name>\n"})}),"\n",(0,o.jsx)(a.h3,{id:"database-schema-management",children:"Database Schema Management"}),"\n",(0,o.jsxs)(a.p,{children:["Every time you deploy an application to DBOS Cloud, it runs all migrations defined in your ",(0,o.jsx)(a.code,{children:"dbos-config.yaml"}),"."]}),"\n",(0,o.jsx)(a.p,{children:"Sometimes, it may be necessary to manually perform schema changes on a cloud database, for example to recover from a schema migration failure.\nTo make this easier, you can retrieve your cloud database connection URL by running:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-shell",children:"dbos-cloud db url <database-name>\n"})}),"\n",(0,o.jsx)(a.p,{children:"You can then use it to run locally any migration command (for example, a down-migration command in your schema migration tool) and it will execute on your cloud database."}),"\n",(0,o.jsx)(a.admonition,{type:"warning",children:(0,o.jsx)(a.p,{children:"While it is occasionally necessary, be careful when manually changing the schema on a production database."})}),"\n",(0,o.jsx)(a.admonition,{type:"warning",children:(0,o.jsx)(a.p,{children:"Be careful making breaking schema changes such as deleting or renaming a column\u2014they may break active workflows running on a previous application version."})}),"\n",(0,o.jsx)(a.h3,{id:"destroying-database-instances",children:"Destroying Database Instances"}),"\n",(0,o.jsx)(a.p,{children:"To destroy a database instance, run:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-shell",children:"dbos-cloud db destroy <database-name>\n"})}),"\n",(0,o.jsx)(a.admonition,{type:"warning",children:(0,o.jsx)(a.p,{children:"Take care\u2014this will irreversibly delete all data in the database instance."})})]})}function u(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>d});var s=n(6540);const o={},t=s.createContext(o);function i(e){const a=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(t.Provider,{value:a},e.children)}}}]);