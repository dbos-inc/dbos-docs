"use strict";(self.webpackChunkoperon_docs=self.webpackChunkoperon_docs||[]).push([[275],{3905:(t,e,r)=>{r.d(e,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var l=n.createContext({}),s=function(t){var e=n.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},p=function(t){var e=s(t.components);return n.createElement(l.Provider,{value:e},t.children)},u="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),u=s(r),d=o,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return r?n.createElement(f,i(i({ref:e},p),{},{components:r})):n.createElement(f,i({ref:e},p))}));function f(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c[u]="string"==typeof t?t:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6622:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:7,title:"Third party calls",description:"Send requests to a third party API from a workflow"},i=void 0,c={unversionedId:"tutorials/third-party-tutorial",id:"tutorials/third-party-tutorial",title:"Third party calls",description:"Send requests to a third party API from a workflow",source:"@site/docs/tutorials/third-party-tutorial.md",sourceDirName:"tutorials",slug:"/tutorials/third-party-tutorial",permalink:"/operon-docs/tutorials/third-party-tutorial",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Third party calls",description:"Send requests to a third party API from a workflow"},sidebar:"tutorialSidebar",previous:{title:"Workflows communication",permalink:"/operon-docs/tutorials/workflow-comm-tutorial"},next:{title:"Workflow events",permalink:"/operon-docs/tutorials/client-workflow-interactions-tutorial"}},l={},s=[{value:"Final code",id:"final-code",level:2}],p={toc:s},u="wrapper";function m(t){let{components:e,...r}=t;return(0,o.kt)(u,(0,n.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Sending calls to third party API can be done through special ",(0,o.kt)("a",{parentName:"p",href:"../api-reference/decorators#operoncommunicator"},"Communicator")," methods. Communicators must return JSON serializable objects."),(0,o.kt)("p",null,"Here is a simple example that calls ",(0,o.kt)("inlineCode",{parentName:"p"},"https://postman-echo.com/get"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'  @OperonCommunicator()\n  static async postmanEcho(ctxt: CommunicatorContext) {\n    ctxt.info("Calling Postman Echo");\n    const resp = await axios.get("https://postman-echo.com/get");\n    return resp.data;\n  }\n')),(0,o.kt)("p",null,"Communicators output are recorded, like transactions', such that they are only executed once during a workflow execution.\nAn ",(0,o.kt)("inlineCode",{parentName:"p"},"OperonCommunicator")," has a retry logic configurable through a ",(0,o.kt)("inlineCode",{parentName:"p"},"CommunicatorConfig"),".\nSpecifically, you can enable or disable retries (enabled by default) and configure the number of retries, their interval, and the exponential backoff multiplier."),(0,o.kt)("h2",{id:"final-code"},"Final code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n  CommunicatorContext,\n  OperonCommunicator,\n  OperonWorkflow,\n  WorkflowContext,\n  GetApi,\n} from "@dbos-inc/operon";\nimport axios from "axios";\n\nexport class External {\n  @OperonCommunicator()\n  static async postmanEcho(ctxt: CommunicatorContext) {\n    ctxt.info("Calling Postman Echo");\n    const resp = await axios.get("https://postman-echo.com/get");\n    return resp.data;\n  }\n\n  @GetApi("/external")\n  @OperonWorkflow()\n  static async postmanEchoEndpoint(ctx: WorkflowContext) {\n    return await ctx.invoke(External).postmanEcho();\n  }\n}\n')))}m.isMDXComponent=!0}}]);