"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[507],{9861:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"typescript/tutorials/idempotency-tutorial","title":"Idempotency","description":"Learn how to make operations idempotent.","source":"@site/docs/typescript/tutorials/idempotency-tutorial.md","sourceDirName":"typescript/tutorials","slug":"/typescript/tutorials/idempotency-tutorial","permalink":"/typescript/tutorials/idempotency-tutorial","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_position":40,"title":"Idempotency","description":"Learn how to make operations idempotent."},"sidebar":"tutorialSidebar","previous":{"title":"Using TypeORM","permalink":"/typescript/tutorials/orms/using-typeorm"},"next":{"title":"Queues & Parallelism","permalink":"/typescript/tutorials/queue-tutorial"}}');var r=o(4848),s=o(8453);const i={sidebar_position:40,title:"Idempotency",description:"Learn how to make operations idempotent."},a=void 0,c={},l=[];function p(e){const t={a:"a",code:"code",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"You can set an idempotency key for a workflow to guarantee it executes only once, even if called multiple times with that key.\nThis is especially useful if your operations have side effects like making a payment or sending an email."}),"\n",(0,r.jsxs)(t.p,{children:["An idempotency key can be any string, but we recommend using ",(0,r.jsx)(t.a,{href:"https://docs.python.org/3/library/uuid.html",children:"UUIDs"}),".\nIdempotency keys are required to be ",(0,r.jsx)(t.strong,{children:"globally unique"})," for your application."]}),"\n",(0,r.jsxs)(t.p,{children:["Use ",(0,r.jsx)(t.a,{href:"/typescript/reference/transactapi/dbos-class#assigning-workflow-ids",children:(0,r.jsx)(t.code,{children:"DBOS.withNextWorkflowID"})})," to set an idempotency key for a workflow.\nThis will also set the ",(0,r.jsx)(t.a,{href:"/typescript/tutorials/workflow-tutorial#workflow-ids",children:"workflow ID"})," of that operation.\nFor example:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'class Example {\n    @DBOS.workflow()\n    static async exampleWorkflow(var1: str, var2: str) {\n        return var1 + var2;\n    }\n}\n\nasync function main() {\n    // This sets the ID of the workflow to the supplied key\n    await DBOS.withNextWorkflowID("very-unique-id", async () => {\n      return await Example.exampleWorkflow("one", "two");\n    });\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["When starting a workflow with ",(0,r.jsx)(t.a,{href:"../reference/transactapi/dbos-class#starting-background-workflows",children:(0,r.jsx)(t.code,{children:"DBOS.startWorkflow"})}),", the idempotency key can either be passed directly to ",(0,r.jsx)(t.code,{children:"DBOS.startWorkflow"}),", or ",(0,r.jsx)(t.code,{children:"DBOS.withNextWorkflowID"})," can be used."]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>a});var n=o(6540);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);