"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[1195],{427:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var o=i(4848),a=i(8453);const t={sidebar_position:1,title:"Application Management",description:"Learn how to manage DBOS Cloud applications",pagination_prev:null},s=void 0,l={id:"cloud-tutorials/application-management",title:"Application Management",description:"Learn how to manage DBOS Cloud applications",source:"@site/docs/cloud-tutorials/application-management.md",sourceDirName:"cloud-tutorials",slug:"/cloud-tutorials/application-management",permalink:"/cloud-tutorials/application-management",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Application Management",description:"Learn how to manage DBOS Cloud applications",pagination_prev:null},sidebar:"tutorialSidebar",next:{title:"Account Management",permalink:"/cloud-tutorials/account-management"}},r={},c=[{value:"Deploying Applications",id:"deploying-applications",level:3},{value:"Customizing MicroVM Setup",id:"customizing-microvm-setup",level:4},{value:"Monitoring and Debugging Applications",id:"monitoring-and-debugging-applications",level:3},{value:"Managing Application Versions",id:"managing-application-versions",level:3},{value:"Updating Applications",id:"updating-applications",level:3},{value:"Deleting Applications",id:"deleting-applications",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"In this guide, you'll learn how to manage applications in DBOS Cloud."}),"\n",(0,o.jsx)(n.h3,{id:"deploying-applications",children:"Deploying Applications"}),"\n",(0,o.jsx)(n.p,{children:"To deploy your application to DBOS Cloud, run this command in its root directory:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"dbos-cloud app deploy\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Your application is deployed using the ",(0,o.jsx)(n.code,{children:"name"})," in its ",(0,o.jsx)(n.code,{children:"dbos-config.yaml"}),".\nApplication names should be between 3 and 30 characters and must contain only lowercase letters and numbers, dashes (",(0,o.jsx)(n.code,{children:"-"}),"), and underscores (",(0,o.jsx)(n.code,{children:"_"}),"). Application names are unique within an ",(0,o.jsx)(n.a,{href:"account-management#organization-management",children:"organization"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["The first time you deploy an application, you are prompted to choose to which ",(0,o.jsx)(n.a,{href:"/cloud-tutorials/database-management",children:"database instance"})," to connect your app, or to provision one if you have none.\nMultiple applications can connect to the same database instance (server)\u2014they are deployed to isolated databases on that server."]}),"\n",(0,o.jsx)(n.p,{children:"Each time you deploy an application, the following steps execute:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Upload"}),": An archive of your application folder is created and uploaded to DBOS Cloud. This archive can be up to 500 MB in size."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Configuration"}),": Your application's dependencies are installed and the application is built.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["In Python, dependencies are loaded from ",(0,o.jsx)(n.code,{children:"requirements.txt"}),". In TypeScript, they are loaded from ",(0,o.jsx)(n.code,{children:"package-lock.json"}),", or from ",(0,o.jsx)(n.code,{children:"package.json"})," if the former is not present. The maximum size of your app after all dependencies are installed is 2 GB."]}),"\n",(0,o.jsxs)(n.li,{children:["In TypeScript, your application is built using ",(0,o.jsx)(n.code,{children:"npm run build"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["After dependencies are installed, all database migrations specified in your ",(0,o.jsx)(n.code,{children:"dbos-config.yaml"})," are run on your cloud database."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Deployment"}),": Your application is deployed to a number of ",(0,o.jsx)(n.a,{href:"https://firecracker-microvm.github.io/",children:"Firecracker microVMs"})," with 1vCPU and 512MB of RAM by default.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["DBOS Pro subscribers can ",(0,o.jsx)(n.a,{href:"../cloud-tutorials/cloud-cli#dbos-cloud-app-update",children:"configure"})," the amount of memory allocated to each microVM."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"MicroVMs expect your application to serve requests from port 8000 (Python\u2014the default port for FastAPI and Gunicorn) or 3000 (TypeScript\u2014the default port for DBOS Transact and Koa)."}),"\n",(0,o.jsxs)(n.p,{children:["After your application is deployed, the URL of your deployed application is printed.\nThis URL is of the form ",(0,o.jsx)(n.code,{children:"https://<username>-<app-name>.cloud.dbos.dev/"}),".\nIf your account is part of an ",(0,o.jsx)(n.a,{href:"/cloud-tutorials/account-management#organization-management",children:"organization"}),", organization name is used instead of username."]}),"\n",(0,o.jsxs)(n.p,{children:["If you edit your application, run ",(0,o.jsx)(n.code,{children:"dbos-cloud app deploy"})," again to apply the latest migrations and upgrade to the latest version."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["During your first deploy, you can programatically specify a particular database instance through the ",(0,o.jsx)(n.code,{children:"-d <database-instance-name>"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["During the first deploy, you can enable time travel for your application with ",(0,o.jsx)(n.code,{children:"--enable-timetravel"}),". You can delete and re-deploy an existing application to enable time travel."]}),"\n",(0,o.jsxs)(n.li,{children:["You don't have to worry about changing database server connection parameters like ",(0,o.jsx)(n.code,{children:"hostname"})," or ",(0,o.jsx)(n.code,{children:"password"})," in ",(0,o.jsx)(n.code,{children:"dbos-config.yaml"})," to deploy an application to the cloud\u2014DBOS automatically applies the connection information of your cloud database instance."]}),"\n",(0,o.jsx)(n.li,{children:"You cannot change the database of a deployed application. You must delete and re-deploy the application."}),"\n"]})}),"\n",(0,o.jsx)(n.h4,{id:"customizing-microvm-setup",children:"Customizing MicroVM Setup"}),"\n",(0,o.jsxs)(n.p,{children:["DBOS Pro subscribers can provide a ",(0,o.jsx)(n.em,{children:"setup script"})," that runs before their application is built.\nThis script can customize the runtime environment for your application, for example installing system packages and libraries."]}),"\n",(0,o.jsxs)(n.p,{children:["A setup script must be specified in your ",(0,o.jsx)(n.code,{children:"dbos-config.yaml"})," like so:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="dbos-config.yaml"',children:'runtimeConfig:\n    # Script DBOS Cloud runs to customize your application\n    # runtime before building your application.\n    # Requires a DBOS Pro subscription.\n    setup:\n        - "./build.sh"\n    # Command DBOS Cloud executes to start your application.\n    start: <your-start-command>\n'})}),"\n",(0,o.jsx)(n.p,{children:"A setup script may install system packages or libraries or otherwise customize the microVM image. For example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="build.sh"',children:"#!/bin/bash\n\n# Install the traceroute package for use in your application\napt install traceroute\n"})}),"\n",(0,o.jsx)(n.h3,{id:"monitoring-and-debugging-applications",children:"Monitoring and Debugging Applications"}),"\n",(0,o.jsx)(n.p,{children:"DBOS provides many tools to monitor and debug applications:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["To get a high-level view of all your applications and their traces and logs, check out ",(0,o.jsx)(n.a,{href:"./monitoring-dashboard",children:"our monitoring dashboard"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["To replay DBOS Cloud execution traces locally, check out our ",(0,o.jsx)(n.a,{href:"./timetravel-debugging",children:"time travel debugger"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["To retrieve the last ",(0,o.jsx)(n.code,{children:"N"})," seconds of your application's logs, run in your application root directory ",(0,o.jsx)(n.a,{href:"/cloud-tutorials/cloud-cli#dbos-cloud-app-logs",children:(0,o.jsx)(n.code,{children:"dbos-cloud app logs -l <N>"})}),". Note that new log entries take a few seconds to appear."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["To retrieve the status of a particular application, run ",(0,o.jsx)(n.a,{href:"/cloud-tutorials/cloud-cli#dbos-cloud-app-status",children:(0,o.jsx)(n.code,{children:"dbos-cloud app status <app-name>"})}),". To retrieve the statuses of all applications, run ",(0,o.jsx)(n.a,{href:"/cloud-tutorials/cloud-cli#dbos-cloud-app-list",children:(0,o.jsx)(n.code,{children:"dbos-cloud app list"})}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"managing-application-versions",children:"Managing Application Versions"}),"\n",(0,o.jsx)(n.p,{children:"Each time you deploy an application, it creates a new version with a unique ID.\nTo list all previous versions of your application, run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"dbos-cloud app versions <app-name>\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can redeploy a previous version of your application by passing ",(0,o.jsx)(n.code,{children:"--previous-version <version-id>"})," to the ",(0,o.jsx)(n.a,{href:"/cloud-tutorials/cloud-cli#dbos-cloud-app-deploy",children:(0,o.jsx)(n.code,{children:"app deploy"})})," command."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"dbos-cloud app deploy --previous-version <version-id>\n"})}),"\n",(0,o.jsx)(n.p,{children:"This will fail if the previous and current versions have different database schemas."}),"\n",(0,o.jsx)(n.h3,{id:"updating-applications",children:"Updating Applications"}),"\n",(0,o.jsx)(n.p,{children:"To update your application metadata, run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"dbos-cloud app update <app-name>\n"})}),"\n",(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"/cloud-tutorials/cloud-cli#dbos-cloud-app-update",children:"DBOS Cloud CLI reference"})," for a list of properties you can update. Note that updating an application metadata does not trigger a redeploy of the code, which you can do with the ",(0,o.jsx)(n.a,{href:"/cloud-tutorials/cloud-cli#dbos-cloud-app-deploy",children:(0,o.jsx)(n.code,{children:"app deploy"})})," command."]}),"\n",(0,o.jsx)(n.h3,{id:"deleting-applications",children:"Deleting Applications"}),"\n",(0,o.jsx)(n.p,{children:"To delete an application, run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"dbos-cloud app delete <app-name>\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can also delete the application database (",(0,o.jsx)(n.code,{children:"app_db_name"}),") with the ",(0,o.jsx)(n.code,{children:"--dropdb"})," argument:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"dbos-cloud app delete <app-name> --dropdb\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsx)(n.p,{children:"This is a destructive operation and cannot be undone."})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var o=i(6540);const a={},t=o.createContext(a);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);