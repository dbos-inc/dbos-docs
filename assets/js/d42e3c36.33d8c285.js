"use strict";(self.webpackChunkoperon_docs=self.webpackChunkoperon_docs||[]).push([[5],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,k=m["".concat(l,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(k,o(o({ref:t},p),{},{components:n})):r.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4142:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:5,title:"Testing Runtime",description:"API documentation for the Operon testing runtime"},o="Operon Testing Runtime",s={unversionedId:"api-reference/testing-runtime",id:"api-reference/testing-runtime",title:"Testing Runtime",description:"API documentation for the Operon testing runtime",source:"@site/docs/api-reference/testing-runtime.md",sourceDirName:"api-reference",slug:"/api-reference/testing-runtime",permalink:"/api-reference/testing-runtime",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Testing Runtime",description:"API documentation for the Operon testing runtime"},sidebar:"tutorialSidebar",previous:{title:"Decorators",permalink:"/api-reference/decorators"},next:{title:"Workflow Handles",permalink:"/api-reference/workflow-handles"}},l={},u=[{value:"Create Testing Runtime",id:"create-testing-runtime",level:3},{value:"createTestingRuntime(userClasses, [configFilePath])",id:"createtestingruntimeuserclasses-configfilepath",level:4},{value:"Methods",id:"methods",level:3},{value:"runtime.invoke(targetClass, [workflowUUID, params])",id:"runtimeinvoketargetclass-workflowuuid-params",level:4},{value:"runtime.retrieveWorkflow(workflowUUID)",id:"runtimeretrieveworkflowworkflowuuid",level:4},{value:"runtime.send(destinationUUID, message, [topic, idempotencyKey])",id:"runtimesenddestinationuuid-message-topic-idempotencykey",level:4},{value:"runtime.getEvent(workflowUUID, key, [timeoutSeconds])",id:"runtimegeteventworkflowuuid-key-timeoutseconds",level:4},{value:"runtime.getHandlersCallback()",id:"runtimegethandlerscallback",level:4},{value:"runtime.getConfig(key, defaultValue)",id:"runtimegetconfigkey-defaultvalue",level:4},{value:"runtime.queryUserDB(sql, ...params)",id:"runtimequeryuserdbsql-params",level:4},{value:"runtime.createUserSchema()",id:"runtimecreateuserschema",level:4},{value:"runtime.dropUserSchema()",id:"runtimedropuserschema",level:4},{value:"runtime.destroy()",id:"runtimedestroy",level:4}],p={toc:u},m="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"operon-testing-runtime"},"Operon Testing Runtime"),(0,a.kt)("p",null,"Operon provides a testing runtime to make it easier to write unit tests for Operon applications.\nBefore running your tests, ",(0,a.kt)("a",{parentName:"p",href:"#create-testing-runtime"},"create and configure the runtime"),".\nIn your tests, use ",(0,a.kt)("a",{parentName:"p",href:"#methods"},"the runtime's methods")," to invoke your application's functions.\nAfter your tests finish, ",(0,a.kt)("a",{parentName:"p",href:"#runtimedestroy"},"destroy the runtime")," to release resources."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"If you use TypeORM, you can use the testing runtime to ",(0,a.kt)("a",{parentName:"p",href:"#runtimecreateuserschema"},"create")," or ",(0,a.kt)("a",{parentName:"p",href:"#runtimedropuserschema"},"drop")," your schemas.\nIf you use Knex or Prisma, you are responsible for setting up schemas/tables and cleaning them up.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"create-testing-runtime"},"Create Testing Runtime"),(0,a.kt)("h4",{id:"createtestingruntimeuserclasses-configfilepath"},"createTestingRuntime(userClasses, ","[","configFilePath","]",")"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"async function createTestingRuntime(userClasses: object[], configFilePath: string = operonConfigFilePath): Promise<OperonTestingRuntime>\n")),(0,a.kt)("p",null,"This method creates a testing runtime and loads user functions from provided ",(0,a.kt)("inlineCode",{parentName:"p"},"userClasses"),".\nYou can also optionally provide a path to an Operon ",(0,a.kt)("a",{parentName:"p",href:"/api-reference/configuration"},"configuration file"),".\nIf no path is provided, the runtime loads a configuration file from the default location (",(0,a.kt)("inlineCode",{parentName:"p"},"operon-config.yaml")," in the package root)."),(0,a.kt)("p",null,"This example creates a runtime that loads functions from the ",(0,a.kt)("inlineCode",{parentName:"p"},"Hello")," class and uses the config file ",(0,a.kt)("inlineCode",{parentName:"p"},"test-config.yaml"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'testRuntime = await createTestingRuntime([Hello], "test-config.yaml");\n')),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"This method ",(0,a.kt)("em",{parentName:"p"},"drops and re-creates")," the Operon system database. You will lose all persisted system information such as workflow status. Don't run unit tests on your production database!")),(0,a.kt)("h3",{id:"methods"},"Methods"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#runtimeinvoketargetclass-workflowuuid-params"},"invoke(targetClass, ","[","workflowUUID, params","]",")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#runtimeretrieveworkflowworkflowuuid"},"retrieveWorkflow(workflowUUID)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#runtimesenddestinationuuid-message-topic-idempotencykey"},"send(destinationUUID, message, ","[","topic, idempotencyKey","]",")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#runtimegeteventworkflowuuid-key-timeoutseconds"},"getEvent(workflowUUID, key, ","[","timeoutSeconds","]",")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#runtimegethandlerscallback"},"getHandlersCallback()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#runtimegetconfigkey"},"getConfig(key, defaultValue)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#runtimequeryuserdbsql-params"},"queryUserDB(sql, ...params)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#runtimecreateuserschema"},"createUserSchema()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#runtimedropuserschema"},"dropUserSchema()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#runtimedestroy"},"destroy()"))),(0,a.kt)("h4",{id:"runtimeinvoketargetclass-workflowuuid-params"},"runtime.invoke(targetClass, ","[","workflowUUID, params","]",")"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"invoke<T>(targetClass: T, workflowUUID?: string, params?: OperonInvokeParams): InvokeFuncs<T>\n")),(0,a.kt)("p",null,"You can use ",(0,a.kt)("inlineCode",{parentName:"p"},"invoke()")," to invoke workflows, transactions, and communicators."),(0,a.kt)("p",null,"The syntax for invoking function ",(0,a.kt)("inlineCode",{parentName:"p"},"foo")," in class ",(0,a.kt)("inlineCode",{parentName:"p"},"Bar")," with argument ",(0,a.kt)("inlineCode",{parentName:"p"},"baz")," is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"runtime.invoke(Bar).foo(baz)\n")),(0,a.kt)("p",null,"You don't need to supply a context to an invoked function","\u2014","the testing runtime does this for you."),(0,a.kt)("p",null,"When calling transactions or communicators, ",(0,a.kt)("inlineCode",{parentName:"p"},"invoke()")," asynchronously returns the function's output.\nWhen calling workflows, ",(0,a.kt)("inlineCode",{parentName:"p"},"invoke()")," asynchronously returns a ",(0,a.kt)("a",{parentName:"p",href:"./workflow-handles"},(0,a.kt)("inlineCode",{parentName:"a"},"handle"))," for the workflow."),(0,a.kt)("p",null,"You can optionally provide a UUID idempotency key to the invoked function.\nFor more information, see our ",(0,a.kt)("a",{parentName:"p",href:"/tutorials/idempotency-tutorial"},"idempotency tutorial"),"."),(0,a.kt)("p",null,"You can also optionally provide additional parameters for ",(0,a.kt)("inlineCode",{parentName:"p"},"invoke()")," including the ",(0,a.kt)("a",{parentName:"p",href:"/tutorials/authentication-authorization"},"authenticated user and roles")," and an ",(0,a.kt)("a",{parentName:"p",href:"/api-reference/contexts#ctxtrequest"},"HTTPRequest"),". This is especially helpful if you want to test individual functions without running end-to-end HTTP serving. The parameters have the following structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"interface OperonInvokeParams {\n  readonly authenticatedUser?: string;    // The user who ran the function.\n  readonly authenticatedRoles?: string[]; // Roles the authenticated user has.\n  readonly request?: HTTPRequest;         // The originating HTTP request.\n}\n")),(0,a.kt)("h4",{id:"runtimeretrieveworkflowworkflowuuid"},"runtime.retrieveWorkflow(workflowUUID)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"retrieveWorkflow<R>(workflowUUID: string): WorkflowHandle<R>;\n")),(0,a.kt)("p",null,"This method returns a ",(0,a.kt)("a",{parentName:"p",href:"/api-reference/workflow-handles"},"workflow handle")," for the workflow with the input ",(0,a.kt)("a",{parentName:"p",href:"../tutorials/workflow-tutorial#workflow-identity"},"identity UUID"),".\nThe type ",(0,a.kt)("inlineCode",{parentName:"p"},"R")," is the return type of the target workflow."),(0,a.kt)("h4",{id:"runtimesenddestinationuuid-message-topic-idempotencykey"},"runtime.send(destinationUUID, message, ","[","topic, idempotencyKey","]",")"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"send<T extends NonNullable<any>>(destinationUUID: string, message: T, topic?: string, idempotencyKey?: string): Promise<void>;\n")),(0,a.kt)("p",null,"This method sends a message to a destination workflow identity.\nMessages can optionally be associated with a topic and are queued on the receiver per topic.\nYou can optionally provide an idempotency key to guarantee only a single message is sent even if ",(0,a.kt)("inlineCode",{parentName:"p"},"send")," is called more than once.\nFor more information, see our ",(0,a.kt)("a",{parentName:"p",href:"../tutorials/workflow-communication-tutorial#messages-api"},"messages API tutorial"),"."),(0,a.kt)("h4",{id:"runtimegeteventworkflowuuid-key-timeoutseconds"},"runtime.getEvent(workflowUUID, key, ","[","timeoutSeconds","]",")"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getEvent<T extends NonNullable<any>>(workflowUUID: string, key: string, timeoutSeconds?: number): Promise<T | null>;\n")),(0,a.kt)("p",null,"This method retrieves a value published by a workflow identity for a given key using the ",(0,a.kt)("a",{parentName:"p",href:"../tutorials/workflow-communication-tutorial#events-api"},"events API"),".\nA call to ",(0,a.kt)("inlineCode",{parentName:"p"},"getEvent")," waits for the value to be published, returning ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," if the wait times out."),(0,a.kt)("h4",{id:"runtimegethandlerscallback"},"runtime.getHandlersCallback()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getHandlersCallback(): (req: IncomingMessage | Http2ServerRequest, res: ServerResponse | Http2ServerResponse) => Promise<void>; \n")),(0,a.kt)("p",null,"This method returns a request handler callback for node's native ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/api/http.html#httpcreateserveroptions-requestlistener"},"http/http2 server"),".\nYou can use this callback function to test handlers, for example, with ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/supertest"},"supertest"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import request from "supertest";\n\nconst res = await request(testRuntime.getHandlersCallback()).get(\n  "/greeting/operon"\n);\nexpect(res.statusCode).toBe(200);\nexpect(res.text).toMatch("Hello, operon! You have been greeted");\n')),(0,a.kt)("p",null,"In this example, we send a ",(0,a.kt)("inlineCode",{parentName:"p"},"GET")," request to our ",(0,a.kt)("inlineCode",{parentName:"p"},"/greeting/operon")," URL and verify the response."),(0,a.kt)("h4",{id:"runtimegetconfigkey-defaultvalue"},"runtime.getConfig(key, defaultValue)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"getConfig<T>(key: string): T | undefined;\ngetConfig<T>(key: string, defaultValue: T): T;\n")),(0,a.kt)("p",null,"This method retrieves a custom property value specified in ",(0,a.kt)("a",{parentName:"p",href:"/api-reference/configuration#application-configuration"},"application configuration"),"."),(0,a.kt)("h4",{id:"runtimequeryuserdbsql-params"},"runtime.queryUserDB(sql, ...params)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"queryUserDB<R>(sql: string, ...params: any[]): Promise<R[]>;\n")),(0,a.kt)("p",null,"This methods executes a ",(0,a.kt)("a",{parentName:"p",href:"https://node-postgres.com/features/queries#parameterized-query"},"parameterized raw SQL query")," on the user database.\nThe type ",(0,a.kt)("inlineCode",{parentName:"p"},"R")," is the return type of the database row."),(0,a.kt)("p",null,"For example, we can query the ",(0,a.kt)("a",{parentName:"p",href:"/getting-started/quickstart-programming-1"},(0,a.kt)("inlineCode",{parentName:"a"},"operon_hello"))," table in our tests and check the ",(0,a.kt)("inlineCode",{parentName:"p"},"greet_count")," is as expected."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'const rows = await testRuntime.queryUserDB<operon_hello>("SELECT * FROM operon_hello WHERE name=$1", "operon");\nexpect(rows[0].greet_count).toBe(1);\n')),(0,a.kt)("h4",{id:"runtimecreateuserschema"},"runtime.createUserSchema()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"createUserSchema(): Promise<void>;\n")),(0,a.kt)("admonition",{title:"Warning",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Only use this method with TypeORM. It throws an error if you use other database clients.")),(0,a.kt)("p",null,"This method creates schemas/tables in the user database based on the provided TypeORM entity classes."),(0,a.kt)("h4",{id:"runtimedropuserschema"},"runtime.dropUserSchema()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"dropUserSchema(): Promise<void>;\n")),(0,a.kt)("admonition",{title:"Warning",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Only use this method with TypeORM. It throws an error if you use other database clients.")),(0,a.kt)("p",null,"This method drops schemas/tables that are created by ",(0,a.kt)("a",{parentName:"p",href:"#runtimecreateuserschema"},(0,a.kt)("inlineCode",{parentName:"a"},"runtime.createUserSchema()")),"."),(0,a.kt)("h4",{id:"runtimedestroy"},"runtime.destroy()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"destroy(): Promise<void>\n")),(0,a.kt)("p",null,"This method deconstructs the testing runtime and releases client connections to the database.\nPlease remember to run this method after your tests!"))}c.isMDXComponent=!0}}]);