"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[6051],{9673:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"java/tutorials/scheduled-workflows","title":"Scheduled Workflows","description":"Learn how to run DBOS workflows on a schedule.","source":"@site/docs/java/tutorials/scheduled-workflows.md","sourceDirName":"java/tutorials","slug":"/java/tutorials/scheduled-workflows","permalink":"/java/tutorials/scheduled-workflows","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":70,"frontMatter":{"sidebar_position":70,"title":"Scheduled Workflows","description":"Learn how to run DBOS workflows on a schedule."},"sidebar":"tutorialSidebar","previous":{"title":"Workflow Management","permalink":"/java/tutorials/workflow-management"},"next":{"title":"DBOS Lifecycle","permalink":"/java/reference/lifecycle"}}');var r=o(4848),s=o(8453);const a={sidebar_position:70,title:"Scheduled Workflows",description:"Learn how to run DBOS workflows on a schedule."},i=void 0,c={},l=[{value:"<code>@Scheduled</code>",id:"scheduled",level:3},{value:"How Scheduling Works",id:"how-scheduling-works",level:3}];function d(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["You can schedule DBOS ",(0,r.jsx)(n.a,{href:"/java/tutorials/workflow-tutorial",children:"workflows"})," to run exactly once per time interval.\nTo do this, annotate the workflow with the ",(0,r.jsx)(n.a,{href:"#scheduled",children:(0,r.jsx)(n.code,{children:"@Scheduled"})})," annotation and specify the schedule in ",(0,r.jsx)(n.a,{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/support/CronExpression.html",children:"Spring 5.3 CronExpression"})," syntax.  For example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Workflow\n@Scheduled(cron = "0 * * * * *") // Run at the beginning of every minute\npublic void everyMinute(Instant scheduled, Instant actual) {\n    logger.info("I am a workflow scheduled to run once a minute. ");\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Scheduled workflows must take in exactly two arguments: the time that the run was scheduled (as an ",(0,r.jsx)(n.code,{children:"Instant"}),") and the time the run was actually started (as an ",(0,r.jsx)(n.code,{children:"Instant"}),")."]}),"\n",(0,r.jsx)(n.h3,{id:"scheduled",children:(0,r.jsx)(n.code,{children:"@Scheduled"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"@Scheduled"})," annotation takes the following:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cron"}),": The schedule, expressed in ",(0,r.jsx)(n.a,{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/scheduling/support/CronExpression.html",children:"Spring 5.3+ CronExpression"})," syntax."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"how-scheduling-works",children:"How Scheduling Works"}),"\n",(0,r.jsxs)(n.p,{children:["Under the hood, DBOS constructs an ",(0,r.jsx)(n.a,{href:"/java/tutorials/workflow-tutorial#workflow-ids-and-idempotency",children:"idempotency key"})," for each workflow invocation.  The key is a concatenation of the function name and the scheduled time, ensuring each scheduled invocation occurs exactly once while your application is active."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>i});var t=o(6540);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);