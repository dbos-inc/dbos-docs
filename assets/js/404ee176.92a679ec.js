"use strict";(self.webpackChunkdbos_docs=self.webpackChunkdbos_docs||[]).push([[8355],{1848:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>a});var i=s(4848),t=s(8453);const r={sidebar_position:8,title:"Static Analysis",description:"API, tool, and rule documentation for DBOS static code analysis"},l="Static Code Analysis",o={id:"typescript/reference/static-analysis",title:"Static Analysis",description:"API, tool, and rule documentation for DBOS static code analysis",source:"@site/docs/typescript/reference/static-analysis.md",sourceDirName:"typescript/reference",slug:"/typescript/reference/static-analysis",permalink:"/typescript/reference/static-analysis",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Static Analysis",description:"API, tool, and rule documentation for DBOS static code analysis"},sidebar:"tutorialSidebar",previous:{title:"Communicator Library",permalink:"/typescript/reference/communicatorlib"},next:{title:"Time Travel Debugger",permalink:"/typescript/reference/time-travel-debugger"}},c={},a=[{value:"Introduction",id:"introduction",level:2},{value:"<code>eslint</code> and <code>@dbos-inc/eslint-plugin</code>",id:"eslint-and-dbos-inceslint-plugin",level:2},{value:"Installing and configuring the plugin",id:"installing-and-configuring-the-plugin",level:3},{value:"Recommended rules/plugins",id:"recommended-rulesplugins",level:3},{value:"DBOS custom rules",id:"dbos-custom-rules",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components},{TabItem:s,Tabs:r}=n;return s||u("TabItem",!0),r||u("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"static-code-analysis",children:"Static Code Analysis"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'Poor coding practices are responsible for many kinds of bugs, including several common classes of security vulnerabilities.\nUnsafe use of user input, hardcoded/exposed security credentials, improper format strings, construction of SQL statements via string concatenation, and slow regular expressions, are all examples of tactical mistakes that have been exploited "in the wild" to compromise or disable systems.'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'While the list of "gotchas" is long and easily neglected, the good news is that many of these anti-patterns can be detected quickly and automatically by modern static code analysis tools.'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["DBOS recommends using static analysis as an ingredient in a comprehensive security strategy.  As adding rule enforcement to a large, established codebase can be a hassle, DBOS recommends using tools from the beginning of a project, and therefore includes tool configuration in its ",(0,i.jsx)(n.a,{href:"https://github.com/dbos-inc/dbos-demo-apps",children:"demo applications"})," and ",(0,i.jsx)(n.a,{href:"/quickstart",children:"quickstart templates"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"DBOS uses several techniques to ensure that static analysis is as productive as possible, with minimal hassle:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"DBOS Transact builds on popular frameworks, thereby leveraging community best-practices and tools integration."}),"\n",(0,i.jsx)(n.li,{children:"DBOS focuses on analysis rules that detect incorrect API usage and potential security vulnerabilities, rather than nitpicking on coding style."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"eslint-and-dbos-inceslint-plugin",children:[(0,i.jsx)(n.code,{children:"eslint"})," and ",(0,i.jsx)(n.code,{children:"@dbos-inc/eslint-plugin"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://eslint.org/",children:(0,i.jsx)(n.code,{children:"eslint"})})," is a popular tool for checking JavaScript and TypeScript code.  ",(0,i.jsx)(n.code,{children:"eslint"})," is flexible, extensible, and comes with many standard and optional plugins.  Many editors and development tools provide integration with ",(0,i.jsx)(n.code,{children:"eslint"}),", allowing bugs to be detected early in the development cycle."]}),"\n",(0,i.jsxs)(n.p,{children:["Many DBOS-suggested coding practices can be enforced by a combination of ",(0,i.jsx)(n.code,{children:"eslint"})," plugins and rule configurations."]}),"\n",(0,i.jsx)(n.h3,{id:"installing-and-configuring-the-plugin",children:"Installing and configuring the plugin"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["If you got started with the ",(0,i.jsx)(n.a,{href:"/quickstart",children:"quickstart"}),", the plugin is already installed.\nIf you encounter any errors, please make sure you install the right versions of ",(0,i.jsx)(n.code,{children:"eslint"})," and ",(0,i.jsx)(n.code,{children:"typescript-eslint"})," (",(0,i.jsx)(n.code,{children:"npm"})," will tell you if there's a peer dependency conflict)."]})}),"\n",(0,i.jsxs)(n.p,{children:["To install the DBOS ",(0,i.jsx)(n.code,{children:"eslint"})," plugin:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install --save-dev @dbos-inc/eslint-plugin\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Configuring ",(0,i.jsx)(n.code,{children:"eslint"})," can be quite involved, as there are ",(0,i.jsx)(n.a,{href:"https://eslint.org/docs/latest/use/configure/configuration-files#configuration-file-formats",children:"several complete configuration schemes"}),".\nBoth of these options require you to set up a ",(0,i.jsx)(n.code,{children:"tsconfig.json"})," file beforehand."]}),"\n",(0,i.jsxs)(r,{groupId:"config-types",children:[(0,i.jsxs)(s,{value:"flat-config",label:"Flat config",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)("h4",{children:" This config style will work with ESLint 8 and above. "}),"\nPlace an ",(0,i.jsx)(n.code,{children:"eslint.config.js"})," file similar to the following in your project directory."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'const { FlatCompat } = require("@eslint/eslintrc");\nconst dbosIncEslintPlugin = require("@dbos-inc/eslint-plugin");\nconst typescriptEslint = require("typescript-eslint");\nconst typescriptEslintParser = require("@typescript-eslint/parser");\nconst globals = require("globals");\nconst js = require("@eslint/js");\n\nconst compat = new FlatCompat({\n  baseDirectory: __dirname,\n  recommendedConfig: js.configs.recommended\n});\n\nmodule.exports = typescriptEslint.config({\n  extends: compat.extends("plugin:@dbos-inc/dbosRecommendedConfig"),\n  plugins: { "@dbos-inc": dbosIncEslintPlugin },\n\n  languageOptions: {\n    parser: typescriptEslintParser,\n    parserOptions: { project: "./tsconfig.json" },\n    globals: { ...globals.node, ...globals.es6 }\n  },\n\n  rules: { }\n});\n\n'})})]}),(0,i.jsxs)(s,{value:"legacy-config",label:"Legacy config",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)("h4",{children:" This config style will work with ESLint 8 and below. "}),"\nPlace an ",(0,i.jsx)(n.code,{children:".eslintrc"})," file similar to the following in your project directory:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "root": true,\n  "extends": [\n    "plugin:@dbos-inc/dbosRecommendedConfig"\n  ],\n  "plugins": [\n    "@dbos-inc"\n  ],\n  "env": {\n    "node": true,\n    "es6": true\n  },\n  "rules": {\n  },\n  "parser": "@typescript-eslint/parser",\n  "parserOptions": {\n    "project": "./tsconfig.json"\n  }\n}\n'})})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The example above configures the project for the recommended ",(0,i.jsx)(n.code,{children:"eslint"})," configuration.  Adjust the ",(0,i.jsx)(n.code,{children:"extends"}),", ",(0,i.jsx)(n.code,{children:"rules"}),", ",(0,i.jsx)(n.code,{children:"plugins"}),", ",(0,i.jsx)(n.code,{children:"env"}),", and other sections as desired, consulting the configurations and rules below."]}),"\n",(0,i.jsxs)(n.p,{children:["Finally, to make ",(0,i.jsx)(n.code,{children:"eslint"})," easy to run, it is suggested to place commands in ",(0,i.jsx)(n.code,{children:"package.json"}),".  For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'"scripts": {\n  "build": "tsc",\n  "test": "...",\n  "lint": "eslint src",\n  "lint-fix": "eslint --fix src"\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"recommended-rulesplugins",children:"Recommended rules/plugins"}),"\n",(0,i.jsx)(n.p,{children:"These rules are enabled by default:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://eslint.org/docs/latest/rules/no-eval",children:(0,i.jsx)(n.code,{children:"no-eval"})})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://eslint.org/docs/latest/rules/no-implied-eval",children:(0,i.jsx)(n.code,{children:"@typescript-eslint/no-implied-eval"})})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/eslint-community/eslint-plugin-security/blob/HEAD/docs/rules/detect-unsafe-regex.md",children:(0,i.jsx)(n.code,{children:"security/detect-unsafe-regex"})})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-plugin-no-secrets/v/0.1.2",children:(0,i.jsx)(n.code,{children:"no-secrets/no-secrets"})})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://eslint.org/docs/latest/rules/eqeqeq",children:(0,i.jsx)(n.code,{children:"eqeqeq"})})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://typescript-eslint.io/rules/no-unused-vars/",children:(0,i.jsx)(n.code,{children:"@typescript-eslint/no-unused-vars"})})," (silence this rule with leading underscores)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://typescript-eslint.io/rules/no-for-in-array/",children:(0,i.jsx)(n.code,{children:"@typescript-eslint/no-for-in-array"})})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://typescript-eslint.io/rules/no-misused-promises/",children:(0,i.jsx)(n.code,{children:"@typescript-eslint/no-misused-promises"})})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://typescript-eslint.io/rules/no-floating-promises/",children:(0,i.jsx)(n.code,{children:"@typescript-eslint/no-floating-promises"})})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These rules are disabled by default:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eslint.org/docs/latest/rules/semi",children:(0,i.jsx)(n.code,{children:"semi"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eslint.org/docs/latest/rules/no-empty",children:(0,i.jsx)(n.code,{children:"no-empty"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eslint.org/docs/latest/rules/no-constant-condition",children:(0,i.jsx)(n.code,{children:"no-constant-condition"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://typescript-eslint.io/rules/no-unnecessary-type-assertion/",children:(0,i.jsx)(n.code,{children:"@typescript-eslint/no-unnecessary-type-assertion"})})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These plugins are enabled by default:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/eslint/eslint/blob/main/packages/js/src/configs/eslint-recommended.js",children:(0,i.jsx)(n.code,{children:"eslint:recommended"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/recommended.ts",children:(0,i.jsx)(n.code,{children:"@typescript-eslint/recommended"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/recommended-type-checked.ts",children:(0,i.jsx)(n.code,{children:"@typescript-eslint/recommended-type-checked"})})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"dbos-custom-rules",children:"DBOS custom rules"}),"\n",(0,i.jsxs)(n.p,{children:["One custom rule from DBOS, ",(0,i.jsx)(n.code,{children:"@dbos-inc/dbos-static-analysis"}),", is provided in the ",(0,i.jsx)(n.a,{href:"https://github.com/dbos-inc/eslint-plugin",children:(0,i.jsx)(n.code,{children:"@dbos-inc/eslint-plugin"})})," package.  This rule is enabled by default."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["Running a database query with a string that's vulnerable to SQL injection will result in an error.\nThis would typically happen inside of a ",(0,i.jsx)(n.a,{href:"https://docs.dbos.dev/tutorials/transaction-tutorial",children:"transaction"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"SQL injection happens when a bad actor puts SQL code as a field into something like an online form,\nand if a programmer builds a raw query from SQL and this data, the bad actor's supposed data may allow them to run\narbitrary SQL commands over your database."}),"\n",(0,i.jsx)(n.li,{children:"To avoid injection, use parameterized queries. But if you accidentally make yourself vulnerable to injection, DBOS is here to save you!"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Here's how you should make a parameterized query:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"export class Greetings {\n  @Transaction()\n  static async InsertGreeting(ctxt: TransactionContext<Knex>, friend: string, note: string) {\n    await ctxt.client.raw('INSERT INTO greetings (name, note) VALUES (?, ?)', [friend, note]);\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"This example is vulnerable to SQL injection:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"export class Greetings {\n  @Transaction()\n  static async VulnerableGreeting(ctxt: TransactionContext<Knex>, friend: string, note: string) {\n    await ctxt.client.raw(`INSERT INTO greetings (name, note) VALUES (${friend}, ${note})`); // Don't do this!\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The plugin will raise a potential SQL injection error if your query string is either directly or indirectly built up of a nonliteral component."}),"\n",(0,i.jsx)(n.li,{children:"For example, if your query is a format string parameterized by a function call, input variable, or other nonliteral components, the plugin will let you know that you're vulnerable to injection."}),"\n",(0,i.jsxs)(n.li,{children:["There has been an extensive effort to support as many literal component types as possible (things like numbers, regular expressions, ternaries, class expressions, function expressions, and some array and object literals; everything you could ever think of!). If you feel that your raw SQL query call should not be flagged as a potential SQL injection, feel free to file an issue ",(0,i.jsx)(n.a,{href:"https://github.com/dbos-inc/dbos-docs",children:"here"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["These function calls are currently flagged as ",(0,i.jsx)(n.a,{href:"https://docs.dbos.dev/tutorials/workflow-tutorial#determinism",children:"nondeterministic"})," (they may interfere with consistent workflow results or the debugger):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Math.random()"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Date()"}),", ",(0,i.jsx)(n.code,{children:"new Date()"}),", ",(0,i.jsx)(n.code,{children:"Date.now()"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"setTimeout(...)"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.em,{children:["All such operations should use functions provided by DBOS Transact, or at a minimum, be encapsulated in a ",(0,i.jsx)(n.a,{href:"../tutorials/communicator-tutorial",children:"communicator"}),"."]})}),"\n",(0,i.jsx)(n.p,{children:"These function calls are not necessarily nondeterministic, but are still warned about:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"console.log(...)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"bcrypt.hash(...)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"bcrypt.compare(...)"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Emitted warning messages will provide alternatives to each function call."})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"These behaviors result in warnings as well:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Awaiting in a workflow on a non-",(0,i.jsx)(n.code,{children:"WorkflowContext"})," object (this implies I/O, which is often nondeterministic):"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Not allowed:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'@Workflow()\nstatic async myWorkflow(ctxt: WorkflowContext) {\n  // Calling an external API in a workflow is not allowed.\n  const result = await fetch("https://www.google.com");\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Allowed:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'@Communicator()\nstatic async myCommunicator(ctxt: CommunicatorContext) {\n  // Calling an external API in a communicator is allowed.\n  const result = await fetch("https://www.google.com");\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'@Workflow()\nstatic async checkoutWorkflow(ctxt: WorkflowContext) {\n  // All awaits start with a leftmost `WorkflowContext`.\n\n  try {\n    await ctxt.invoke(ShopUtilities).reserveInventory();\n  }\n  catch (error) {\n    ctxt.logger.error("Failed to update inventory");\n    await ctxt.setEvent(session_topic, null);\n    return;\n  }\n\n  // ...\n}\n\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"@Workflow()\nstatic async checkoutWorkflow(ctxt: WorkflowContext) {\n  /* Sometimes, you might await on a non-`WorkflowContext` object,\n  but the function you're calling is a helper function that uses the\n  underlying context. So if you pass in a `WorkflowContext` as a parameter,\n  the warning will be supressed. */\n  await doCheckout(ctxt);\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Global modification in a workflow (this often leads to nondeterministic behavior):"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"let globalResult = undefined;\n\n@Workflow()\nstatic async depositWorkflow(ctxt: WorkflowContext, data: TransactionHistory) {\n  globalResult = await ctxt.invoke(BankTransactionHistory).updateAcctTransactionFunc(data.toAccountId, data, true);\n  // ...\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Any global variable defined outside the scope of the workflow which is directly modified will result in a warning."})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Malformed transactions:"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Your transactions must have a ",(0,i.jsx)(n.code,{children:"TransactionContext<T>"})," as the first parameter, where ",(0,i.jsx)(n.code,{children:"T"})," is a supported database client."]}),"\n",(0,i.jsxs)(n.li,{children:["Your transactions must also use the ",(0,i.jsx)(n.code,{children:"TransactionContext"})," parameter's ",(0,i.jsx)(n.code,{children:"client"})," field. You are allowed to pass your ",(0,i.jsx)(n.code,{children:"TransactionContext"})," to a helper function as a substitute for this replacement."]}),"\n",(0,i.jsx)(n.li,{children:"Not meeting these requirements means that you are not using the database, which makes that transaction essentially useless. The plugin will give you a warning if so."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);